  


<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# githubog: http://ogp.me/ns/fb/githubog#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>recline/vendor/slickgrid/2.0.1/slick.grid.min.js at master · domoritz/recline · GitHub</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png" />
    <link rel="logo" type="image/svg" href="https://github-media-downloads.s3.amazonaws.com/github-logo.svg" />
    <meta property="og:image" content="https://a248.e.akamai.net/assets.github.com/images/modules/logos_page/Octocat.png">
    <link rel="assets" href="https://a248.e.akamai.net/assets.github.com/">
    <link rel="xhr-socket" href="/_sockets" />
    


    <meta name="msapplication-TileImage" content="/windows-tile.png" />
    <meta name="msapplication-TileColor" content="#ffffff" />
    <meta name="selected-link" value="repo_source" data-pjax-transient />
    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="github" name="octolytics-app-id" />

    
    
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="y/z22YenN3PpvIgqKBb1UtVUfEURQvBA0XapG11sCOA=" name="csrf-token" />

    <link href="https://a248.e.akamai.net/assets.github.com/assets/github-77a3b31fd4f61736ec43fef1279c000688f3c8e0.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://a248.e.akamai.net/assets.github.com/assets/github2-b38c654373748874ee8cf0418033fa848634685f.css" media="all" rel="stylesheet" type="text/css" />
    


      <script src="https://a248.e.akamai.net/assets.github.com/assets/frameworks-46f925b35c476fb905e427274e9dfabed0f19439.js" type="text/javascript"></script>
      <script src="https://a248.e.akamai.net/assets.github.com/assets/github-4ece12062689e74035e3dec8a31dee0395bdc3da.js" type="text/javascript"></script>
      
      <meta http-equiv="x-pjax-version" content="48dbfdaaa2ca81f82f6137da5ebc3216">

        <link data-pjax-transient rel='permalink' href='/domoritz/recline/blob/046ee8c1a0f32f068a0caba81103e83999eb3cca/vendor/slickgrid/2.0.1/slick.grid.min.js'>
    <meta property="og:title" content="recline"/>
    <meta property="og:type" content="githubog:gitrepository"/>
    <meta property="og:url" content="https://github.com/domoritz/recline"/>
    <meta property="og:image" content="https://secure.gravatar.com/avatar/6696937670a2289161a2484f086b34cd?s=420&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"/>
    <meta property="og:site_name" content="GitHub"/>
    <meta property="og:description" content="recline - A simple but powerful library for building data applications in pure Javascript and HTML."/>
    <meta property="twitter:card" content="summary"/>
    <meta property="twitter:site" content="@GitHub">
    <meta property="twitter:title" content="domoritz/recline"/>

    <meta name="description" content="recline - A simple but powerful library for building data applications in pure Javascript and HTML." />


    <meta content="589034" name="octolytics-dimension-user_id" /><meta content="domoritz" name="octolytics-dimension-user_login" /><meta content="5563961" name="octolytics-dimension-repository_id" /><meta content="domoritz/recline" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="true" name="octolytics-dimension-repository_is_fork" /><meta content="2579069" name="octolytics-dimension-repository_parent_id" /><meta content="okfn/recline" name="octolytics-dimension-repository_parent_nwo" /><meta content="1682761" name="octolytics-dimension-repository_network_root_id" /><meta content="mertonium/removalist" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/domoritz/recline/commits/master.atom" rel="alternate" title="Recent Commits to recline:master" type="application/atom+xml" />

  </head>


  <body class="logged_out page-blob windows vis-public fork env-production  ">

    <div class="wrapper">
      
      
      

      
      <div class="header header-logged-out">
  <div class="container clearfix">

    <a class="header-logo-wordmark" href="https://github.com/">
      <span class="mega-octicon octicon-logo-github"></span>
    </a>

    <div class="header-actions">
      <a class="button primary" href="/signup">Sign up</a>
      <a class="button" href="/login?return_to=%2Fdomoritz%2Frecline%2Fblob%2Fmaster%2Fvendor%2Fslickgrid%2F2.0.1%2Fslick.grid.min.js">Sign in</a>
    </div>

    <div class="command-bar js-command-bar  in-repository">


      <ul class="top-nav">
          <li class="explore"><a href="/explore">Explore</a></li>
        <li class="features"><a href="/features">Features</a></li>
          <li class="enterprise"><a href="https://enterprise.github.com/">Enterprise</a></li>
          <li class="blog"><a href="/blog">Blog</a></li>
      </ul>
        <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get">

<input type="text" data-hotkey="/ s" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" autocapitalize="off"
    
    
      data-repo="domoritz/recline"
      data-branch="master"
      data-sha="981cc840485aea05eee299285befbc4a48f06e5d"
  >

    <input type="hidden" name="nwo" value="domoritz/recline" />

    <div class="select-menu js-menu-container js-select-menu search-context-select-menu">
      <span class="minibutton select-menu-button js-menu-target">
        <span class="js-select-button">This repository</span>
      </span>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container">
        <div class="select-menu-modal">

          <div class="select-menu-item js-navigation-item selected">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" class="js-search-this-repository" name="search_target" value="repository" checked="checked" />
            <div class="select-menu-item-text js-select-button-text">This repository</div>
          </div> <!-- /.select-menu-item -->

          <div class="select-menu-item js-navigation-item">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" name="search_target" value="global" />
            <div class="select-menu-item-text js-select-button-text">All repositories</div>
          </div> <!-- /.select-menu-item -->

        </div>
      </div>
    </div>

  <span class="octicon help tooltipped downwards" title="Show command bar help">
    <span class="octicon octicon-question"></span>
  </span>


  <input type="hidden" name="ref" value="cmdform">

</form>
    </div>

  </div>
</div>


      


            <div class="site hfeed" itemscope itemtype="http://schema.org/WebPage">
      <div class="hentry">
        
        <div class="pagehead repohead instapaper_ignore readability-menu ">
          <div class="container">
            <div class="title-actions-bar">
              

<ul class="pagehead-actions">



    <li>
      <a href="/login?return_to=%2Fdomoritz%2Frecline"
        class="minibutton with-count js-toggler-target star-button entice tooltipped upwards"
        title="You must be signed in to use this feature" rel="nofollow">
        <span class="octicon octicon-star"></span>Star
      </a>
      <a class="social-count js-social-count" href="/domoritz/recline/stargazers">
        0
      </a>
    </li>
    <li>
      <a href="/login?return_to=%2Fdomoritz%2Frecline"
        class="minibutton with-count js-toggler-target fork-button entice tooltipped upwards"
        title="You must be signed in to fork a repository" rel="nofollow">
        <span class="octicon octicon-git-branch"></span>Fork
      </a>
      <a href="/domoritz/recline/network" class="social-count">
        131
      </a>
    </li>
</ul>

              <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
                <span class="repo-label"><span>public</span></span>
                <span class="mega-octicon octicon-repo"></span>
                <span class="author vcard">
                  <a href="/domoritz" class="url fn" itemprop="url" rel="author">
                  <span itemprop="title">domoritz</span>
                  </a></span> /
                <strong><a href="/domoritz/recline" class="js-current-repository">recline</a></strong>
                  <span class="fork-flag">
                    <span class="text">forked from <a href="/okfn/recline">okfn/recline</a></span>
                  </span>
              </h1>
            </div>

            
  <ul class="tabs">
    <li class="pulse-nav"><a href="/domoritz/recline/pulse" class="js-selected-navigation-item " data-selected-links="pulse /domoritz/recline/pulse" rel="nofollow"><span class="octicon octicon-pulse"></span></a></li>
    <li><a href="/domoritz/recline" class="js-selected-navigation-item selected" data-selected-links="repo_source repo_downloads repo_commits repo_tags repo_branches /domoritz/recline">Code</a></li>
    <li><a href="/domoritz/recline/network" class="js-selected-navigation-item " data-selected-links="repo_network /domoritz/recline/network">Network</a></li>
    <li><a href="/domoritz/recline/pulls" class="js-selected-navigation-item " data-selected-links="repo_pulls /domoritz/recline/pulls">Pull Requests <span class='counter'>0</span></a></li>




    <li><a href="/domoritz/recline/graphs" class="js-selected-navigation-item " data-selected-links="repo_graphs repo_contributors /domoritz/recline/graphs">Graphs</a></li>


  </ul>
  
<div class="tabnav kill-the-chrome-after-repo-next-ship-tabnav">

  <span class="tabnav-right">
    <ul class="tabnav-tabs">
          <li><a href="/domoritz/recline/tags" class="js-selected-navigation-item tabnav-tab" data-selected-links="repo_tags /domoritz/recline/tags">Tags <span class="counter ">5</span></a></li>
    </ul>
  </span>

  <div class="tabnav-widget scope">


    <div class="select-menu js-menu-container js-select-menu js-branch-menu">
      <a class="minibutton select-menu-button js-menu-target" data-hotkey="w" data-ref="master">
        <span class="octicon octicon-git-branch"></span>
        <i>branch:</i>
        <span class="js-select-button">master</span>
      </a>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container">

        <div class="select-menu-modal">
          <div class="select-menu-header">
            <span class="select-menu-title">Switch branches/tags</span>
            <span class="octicon octicon-remove-close js-menu-close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-filters">
            <div class="select-menu-text-filter">
              <input type="text" id="commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
            </div>
            <div class="select-menu-tabs">
              <ul>
                <li class="select-menu-tab">
                  <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
                </li>
                <li class="select-menu-tab">
                  <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
                </li>
              </ul>
            </div><!-- /.select-menu-tabs -->
          </div><!-- /.select-menu-filters -->

          <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket css-truncate" data-tab-filter="branches">

            <div data-filterable-for="commitish-filter-field" data-filterable-type="substring">

                <div class="select-menu-item js-navigation-item ">
                  <span class="select-menu-item-icon octicon octicon-check"></span>
                  <a href="/domoritz/recline/blob/120-solr-backend/vendor/slickgrid/2.0.1/slick.grid.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="120-solr-backend" rel="nofollow" title="120-solr-backend">120-solr-backend</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item ">
                  <span class="select-menu-item-icon octicon octicon-check"></span>
                  <a href="/domoritz/recline/blob/217-ckan-backend/vendor/slickgrid/2.0.1/slick.grid.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="217-ckan-backend" rel="nofollow" title="217-ckan-backend">217-ckan-backend</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item ">
                  <span class="select-menu-item-icon octicon octicon-check"></span>
                  <a href="/domoritz/recline/blob/feature-43-backend-and-dataset-setup/vendor/slickgrid/2.0.1/slick.grid.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="feature-43-backend-and-dataset-setup" rel="nofollow" title="feature-43-backend-and-dataset-setup">feature-43-backend-and-dataset-setup</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item ">
                  <span class="select-menu-item-icon octicon octicon-check"></span>
                  <a href="/domoritz/recline/blob/feature-128-refactor-backend-v0.5/vendor/slickgrid/2.0.1/slick.grid.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="feature-128-refactor-backend-v0.5" rel="nofollow" title="feature-128-refactor-backend-v0.5">feature-128-refactor-backend-v0.5</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item ">
                  <span class="select-menu-item-icon octicon octicon-check"></span>
                  <a href="/domoritz/recline/blob/feature-162-simplify-dataset-to-backend/vendor/slickgrid/2.0.1/slick.grid.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="feature-162-simplify-dataset-to-backend" rel="nofollow" title="feature-162-simplify-dataset-to-backend">feature-162-simplify-dataset-to-backend</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item ">
                  <span class="select-menu-item-icon octicon octicon-check"></span>
                  <a href="/domoritz/recline/blob/gh-pages/vendor/slickgrid/2.0.1/slick.grid.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="gh-pages" rel="nofollow" title="gh-pages">gh-pages</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item ">
                  <span class="select-menu-item-icon octicon octicon-check"></span>
                  <a href="/domoritz/recline/blob/markercluster/vendor/slickgrid/2.0.1/slick.grid.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="markercluster" rel="nofollow" title="markercluster">markercluster</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item selected">
                  <span class="select-menu-item-icon octicon octicon-check"></span>
                  <a href="/domoritz/recline/blob/master/vendor/slickgrid/2.0.1/slick.grid.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="master" rel="nofollow" title="master">master</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item ">
                  <span class="select-menu-item-icon octicon octicon-check"></span>
                  <a href="/domoritz/recline/blob/pouchdb/vendor/slickgrid/2.0.1/slick.grid.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="pouchdb" rel="nofollow" title="pouchdb">pouchdb</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item ">
                  <span class="select-menu-item-icon octicon octicon-check"></span>
                  <a href="/domoritz/recline/blob/v0.5/vendor/slickgrid/2.0.1/slick.grid.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v0.5" rel="nofollow" title="v0.5">v0.5</a>
                </div> <!-- /.select-menu-item -->
            </div>

              <div class="select-menu-no-results">Nothing to show</div>
          </div> <!-- /.select-menu-list -->


          <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket css-truncate" data-tab-filter="tags">
            <div data-filterable-for="commitish-filter-field" data-filterable-type="substring">

                <div class="select-menu-item js-navigation-item ">
                  <span class="select-menu-item-icon octicon octicon-check"></span>
                  <a href="/domoritz/recline/blob/v0.5/vendor/slickgrid/2.0.1/slick.grid.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v0.5" rel="nofollow" title="v0.5">v0.5</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item ">
                  <span class="select-menu-item-icon octicon octicon-check"></span>
                  <a href="/domoritz/recline/blob/v0.4/vendor/slickgrid/2.0.1/slick.grid.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v0.4" rel="nofollow" title="v0.4">v0.4</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item ">
                  <span class="select-menu-item-icon octicon octicon-check"></span>
                  <a href="/domoritz/recline/blob/v0.3/vendor/slickgrid/2.0.1/slick.grid.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v0.3" rel="nofollow" title="v0.3">v0.3</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item ">
                  <span class="select-menu-item-icon octicon octicon-check"></span>
                  <a href="/domoritz/recline/blob/v0.2/vendor/slickgrid/2.0.1/slick.grid.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v0.2" rel="nofollow" title="v0.2">v0.2</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item ">
                  <span class="select-menu-item-icon octicon octicon-check"></span>
                  <a href="/domoritz/recline/blob/v0.1/vendor/slickgrid/2.0.1/slick.grid.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v0.1" rel="nofollow" title="v0.1">v0.1</a>
                </div> <!-- /.select-menu-item -->
            </div>

            <div class="select-menu-no-results">Nothing to show</div>

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

  </div> <!-- /.scope -->

  <ul class="tabnav-tabs">
    <li><a href="/domoritz/recline" class="selected js-selected-navigation-item tabnav-tab" data-selected-links="repo_source /domoritz/recline">Files</a></li>
    <li><a href="/domoritz/recline/commits/master" class="js-selected-navigation-item tabnav-tab" data-selected-links="repo_commits /domoritz/recline/commits/master">Commits</a></li>
    <li><a href="/domoritz/recline/branches" class="js-selected-navigation-item tabnav-tab" data-selected-links="repo_branches /domoritz/recline/branches" rel="nofollow">Branches <span class="counter ">10</span></a></li>
  </ul>

</div>

  


            
          </div>
        </div><!-- /.repohead -->

        <div id="js-repo-pjax-container" class="container context-loader-container" data-pjax-container>
          


<!-- blob contrib key: blob_contributors:v21:65e5cbdda60442abbb0f27d53af73e3a -->
<!-- blob contrib frag key: views10/v8/blob_contributors:v21:65e5cbdda60442abbb0f27d53af73e3a -->

<div id="slider">
    <div class="frame-meta">

      <p title="This is a placeholder element" class="js-history-link-replace hidden"></p>

        <a href="/domoritz/recline/find/master" class="js-slide-to" data-hotkey="t" style="display:none">Show File Finder</a>

        <div class="breadcrumb">
          <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/domoritz/recline" class="js-slide-to" data-branch="master" data-direction="back" itemscope="url"><span itemprop="title">recline</span></a></span></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/domoritz/recline/tree/master/vendor" class="js-slide-to" data-branch="master" data-direction="back" itemscope="url"><span itemprop="title">vendor</span></a></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/domoritz/recline/tree/master/vendor/slickgrid" class="js-slide-to" data-branch="master" data-direction="back" itemscope="url"><span itemprop="title">slickgrid</span></a></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/domoritz/recline/tree/master/vendor/slickgrid/2.0.1" class="js-slide-to" data-branch="master" data-direction="back" itemscope="url"><span itemprop="title">2.0.1</span></a></span><span class="separator"> / </span><strong class="final-path">slick.grid.min.js</strong> <span class="js-zeroclipboard zeroclipboard-button" data-clipboard-text="vendor/slickgrid/2.0.1/slick.grid.min.js" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
        </div>


        
  <div class="commit file-history-tease">
    <img class="main-avatar" height="24" src="https://secure.gravatar.com/avatar/9a05859ce895e24f593846e0096993d6?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
    <span class="author"><a href="/rgrp" rel="author">rgrp</a></span>
    <time class="js-relative-date" datetime="2012-05-27T15:31:42-07:00" title="2012-05-27 15:31:42">May 27, 2012</time>
    <div class="commit-title">
        <a href="/domoritz/recline/commit/d339fea2d92a230cbb459fb5a34aefddb949ea1a" class="message">[#119,view/slickgrid][m]: first pass implementation of slickgrid view…</a>
    </div>

    <div class="participation">
      <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>1</strong> contributor</a></p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list">
        <li class="facebox-user-list-item">
          <img height="24" src="https://secure.gravatar.com/avatar/9a05859ce895e24f593846e0096993d6?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
          <a href="/rgrp">rgrp</a>
        </li>
      </ul>
    </div>
  </div>


    </div><!-- ./.frame-meta -->

    <div class="frames">
      <div class="frame" data-permalink-url="/domoritz/recline/blob/046ee8c1a0f32f068a0caba81103e83999eb3cca/vendor/slickgrid/2.0.1/slick.grid.min.js" data-title="recline/vendor/slickgrid/2.0.1/slick.grid.min.js at master · domoritz/recline · GitHub" data-type="blob">

        <div id="files" class="bubble">
          <div class="file">
            <div class="meta">
              <div class="info">
                <span class="icon"><b class="octicon octicon-file-text"></b></span>
                <span class="mode" title="File Mode">file</span>
                  <span>85 lines (80 sloc)</span>
                <span>34.311 kb</span>
              </div>
              <div class="actions">
                <div class="button-group">
                      <a class="minibutton js-entice" href=""
                         data-entice="You must be signed in and on a branch to make or propose changes">Edit</a>
                  <a href="/domoritz/recline/raw/master/vendor/slickgrid/2.0.1/slick.grid.min.js" class="button minibutton " id="raw-url">Raw</a>
                    <a href="/domoritz/recline/blame/master/vendor/slickgrid/2.0.1/slick.grid.min.js" class="button minibutton ">Blame</a>
                  <a href="/domoritz/recline/commits/master/vendor/slickgrid/2.0.1/slick.grid.min.js" class="button minibutton " rel="nofollow">History</a>
                </div><!-- /.button-group -->
              </div><!-- /.actions -->

            </div>
                <div class="blob-wrapper data type-javascript js-blob-data">
      <table class="file-code file-diff">
        <tr class="file-code-line">
          <td class="blob-line-nums">
            <span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
<span id="L9" rel="#L9">9</span>
<span id="L10" rel="#L10">10</span>
<span id="L11" rel="#L11">11</span>
<span id="L12" rel="#L12">12</span>
<span id="L13" rel="#L13">13</span>
<span id="L14" rel="#L14">14</span>
<span id="L15" rel="#L15">15</span>
<span id="L16" rel="#L16">16</span>
<span id="L17" rel="#L17">17</span>
<span id="L18" rel="#L18">18</span>
<span id="L19" rel="#L19">19</span>
<span id="L20" rel="#L20">20</span>
<span id="L21" rel="#L21">21</span>
<span id="L22" rel="#L22">22</span>
<span id="L23" rel="#L23">23</span>
<span id="L24" rel="#L24">24</span>
<span id="L25" rel="#L25">25</span>
<span id="L26" rel="#L26">26</span>
<span id="L27" rel="#L27">27</span>
<span id="L28" rel="#L28">28</span>
<span id="L29" rel="#L29">29</span>
<span id="L30" rel="#L30">30</span>
<span id="L31" rel="#L31">31</span>
<span id="L32" rel="#L32">32</span>
<span id="L33" rel="#L33">33</span>
<span id="L34" rel="#L34">34</span>
<span id="L35" rel="#L35">35</span>
<span id="L36" rel="#L36">36</span>
<span id="L37" rel="#L37">37</span>
<span id="L38" rel="#L38">38</span>
<span id="L39" rel="#L39">39</span>
<span id="L40" rel="#L40">40</span>
<span id="L41" rel="#L41">41</span>
<span id="L42" rel="#L42">42</span>
<span id="L43" rel="#L43">43</span>
<span id="L44" rel="#L44">44</span>
<span id="L45" rel="#L45">45</span>
<span id="L46" rel="#L46">46</span>
<span id="L47" rel="#L47">47</span>
<span id="L48" rel="#L48">48</span>
<span id="L49" rel="#L49">49</span>
<span id="L50" rel="#L50">50</span>
<span id="L51" rel="#L51">51</span>
<span id="L52" rel="#L52">52</span>
<span id="L53" rel="#L53">53</span>
<span id="L54" rel="#L54">54</span>
<span id="L55" rel="#L55">55</span>
<span id="L56" rel="#L56">56</span>
<span id="L57" rel="#L57">57</span>
<span id="L58" rel="#L58">58</span>
<span id="L59" rel="#L59">59</span>
<span id="L60" rel="#L60">60</span>
<span id="L61" rel="#L61">61</span>
<span id="L62" rel="#L62">62</span>
<span id="L63" rel="#L63">63</span>
<span id="L64" rel="#L64">64</span>
<span id="L65" rel="#L65">65</span>
<span id="L66" rel="#L66">66</span>
<span id="L67" rel="#L67">67</span>
<span id="L68" rel="#L68">68</span>
<span id="L69" rel="#L69">69</span>
<span id="L70" rel="#L70">70</span>
<span id="L71" rel="#L71">71</span>
<span id="L72" rel="#L72">72</span>
<span id="L73" rel="#L73">73</span>
<span id="L74" rel="#L74">74</span>
<span id="L75" rel="#L75">75</span>
<span id="L76" rel="#L76">76</span>
<span id="L77" rel="#L77">77</span>
<span id="L78" rel="#L78">78</span>
<span id="L79" rel="#L79">79</span>
<span id="L80" rel="#L80">80</span>
<span id="L81" rel="#L81">81</span>
<span id="L82" rel="#L82">82</span>
<span id="L83" rel="#L83">83</span>
<span id="L84" rel="#L84">84</span>

          </td>
          <td class="blob-line-code">
                  <div class="highlight"><pre><div class='line' id='LC1'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">function</span> <span class="nx">G</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">e</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="o">=!</span><span class="mi">0</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">isPropagationStopped</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">d</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">stopImmediatePropagation</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="o">=!</span><span class="mi">0</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">isImmediatePropagationStopped</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">e</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">A</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">__nonDataRow</span><span class="o">=!</span><span class="mi">0</span><span class="p">}</span><span class="kd">function</span> <span class="nx">ba</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">__group</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">__updated</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">count</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">title</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">collapsed</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">totals</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">__groupTotals</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">group</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">isActive</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="o">?</span><span class="nx">d</span><span class="o">===</span><span class="nx">e</span><span class="o">:</span></div><div class='line' id='LC2'><span class="kc">null</span><span class="o">!==</span><span class="nx">d</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">activate</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">!==</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!==</span><span class="nx">d</span><span class="p">)</span><span class="k">throw</span><span class="s2">&quot;SlickGrid.EditorLock.activate: an editController is still active, can&#39;t activate another editController&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="p">.</span><span class="nx">commitCurrentEdit</span><span class="p">)</span><span class="k">throw</span><span class="s2">&quot;SlickGrid.EditorLock.activate: editController must implement .commitCurrentEdit()&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="p">.</span><span class="nx">cancelCurrentEdit</span><span class="p">)</span><span class="k">throw</span><span class="s2">&quot;SlickGrid.EditorLock.activate: editController must implement .cancelCurrentEdit()&quot;</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">}};</span><span class="k">this</span><span class="p">.</span><span class="nx">deactivate</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">!==</span><span class="nx">e</span><span class="p">)</span><span class="k">throw</span><span class="s2">&quot;SlickGrid.EditorLock.deactivate: specified editController is not the currently active one&quot;</span><span class="p">;</span></div><div class='line' id='LC3'><span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">commitCurrentEdit</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">d</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">commitCurrentEdit</span><span class="p">()</span><span class="o">:!</span><span class="mi">0</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">cancelCurrentEdit</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">d</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">cancelCurrentEdit</span><span class="p">()</span><span class="o">:!</span><span class="mi">0</span><span class="p">}}</span><span class="nx">e</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="nb">window</span><span class="p">,{</span><span class="nx">Slick</span><span class="o">:</span><span class="p">{</span><span class="nx">Event</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">subscribe</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">)};</span><span class="k">this</span><span class="p">.</span><span class="nx">unsubscribe</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">f</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">--</span><span class="p">)</span><span class="nx">d</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">===</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="mi">1</span><span class="p">)};</span><span class="k">this</span><span class="p">.</span><span class="nx">notify</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="o">||</span><span class="k">new</span> <span class="nx">G</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="o">||</span><span class="k">this</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="nx">ma</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">ma</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;!</span><span class="nx">f</span><span class="p">.</span><span class="nx">isPropagationStopped</span><span class="p">()</span><span class="o">&amp;&amp;!</span><span class="nx">f</span><span class="p">.</span><span class="nx">isImmediatePropagationStopped</span><span class="p">();</span><span class="nx">ma</span><span class="o">++</span><span class="p">)</span><span class="nx">A</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">ma</span><span class="p">].</span><span class="nx">call</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">return</span> <span class="nx">A</span><span class="p">}},</span><span class="nx">EventData</span><span class="o">:</span><span class="nx">G</span><span class="p">,</span></div><div class='line' id='LC4'><span class="nx">EventHandler</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">subscribe</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">event</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">handler</span><span class="o">:</span><span class="nx">f</span><span class="p">});</span><span class="nx">e</span><span class="p">.</span><span class="nx">subscribe</span><span class="p">(</span><span class="nx">f</span><span class="p">)};</span><span class="k">this</span><span class="p">.</span><span class="nx">unsubscribe</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">--</span><span class="p">;)</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">event</span><span class="o">===</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">handler</span><span class="o">===</span><span class="nx">f</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">unsubscribe</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="k">break</span><span class="p">}};</span><span class="k">this</span><span class="p">.</span><span class="nx">unsubscribeAll</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">--</span><span class="p">;)</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">event</span><span class="p">.</span><span class="nx">unsubscribe</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">handler</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="p">[]}},</span><span class="nx">Range</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">}</span><span class="k">this</span><span class="p">.</span><span class="nx">fromRow</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">fromCell</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">toRow</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">toCell</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span></div><div class='line' id='LC5'><span class="k">this</span><span class="p">.</span><span class="nx">isSingleRow</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">fromRow</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">toRow</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">isSingleCell</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">fromRow</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">toRow</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">fromCell</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">toCell</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">contains</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">d</span><span class="o">&gt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">fromRow</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">&lt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">toRow</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">&gt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">fromCell</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">&lt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">toCell</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">isSingleCell</span><span class="p">()</span><span class="o">?</span><span class="s2">&quot;(&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">fromRow</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">fromCell</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="o">:</span><span class="s2">&quot;(&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">fromRow</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">fromCell</span><span class="o">+</span><span class="s2">&quot; - &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">toRow</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">toCell</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">}},</span><span class="nx">NonDataRow</span><span class="o">:</span><span class="nx">A</span><span class="p">,</span><span class="nx">Group</span><span class="o">:</span><span class="nx">ba</span><span class="p">,</span><span class="nx">GroupTotals</span><span class="o">:</span><span class="nx">g</span><span class="p">,</span><span class="nx">EditorLock</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">GlobalEditorLock</span><span class="o">:</span><span class="k">new</span> <span class="nx">f</span><span class="p">}});</span><span class="nx">ba</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span></div><div class='line' id='LC6'><span class="k">new</span> <span class="nx">A</span><span class="p">;</span><span class="nx">ba</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">equals</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">value</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">count</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">count</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">collapsed</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">collapsed</span><span class="p">};</span><span class="nx">g</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="k">new</span> <span class="nx">A</span><span class="p">})(</span><span class="nx">jQuery</span><span class="p">);</span><span class="cm">/*</span></div><div class='line' id='LC7'><br/></div><div class='line' id='LC8'><span class="cm"> (c) 2009-2012 Michael Leibman</span></div><div class='line' id='LC9'><span class="cm"> michael{dot}leibman{at}gmail{dot}com</span></div><div class='line' id='LC10'><span class="cm"> http://github.com/mleibman/slickgrid</span></div><div class='line' id='LC11'><br/></div><div class='line' id='LC12'><span class="cm"> Distributed under MIT license.</span></div><div class='line' id='LC13'><span class="cm"> All rights reserved.</span></div><div class='line' id='LC14'><br/></div><div class='line' id='LC15'><span class="cm"> SlickGrid v2.0</span></div><div class='line' id='LC16'><br/></div><div class='line' id='LC17'><span class="cm"> NOTES:</span></div><div class='line' id='LC18'><span class="cm">     Cell/row DOM manipulations are done directly bypassing jQuery&#39;s DOM manipulation methods.</span></div><div class='line' id='LC19'><span class="cm">     This increases the speed dramatically, but can only be done safely because there are no event handlers</span></div><div class='line' id='LC20'><span class="cm">     or data associated with any cell/row DOM nodes.  Cell editors must make sure they implement .destroy()</span></div><div class='line' id='LC21'><span class="cm">     and do proper cleanup.</span></div><div class='line' id='LC22'><span class="cm">*/</span></div><div class='line' id='LC23'><span class="k">if</span><span class="p">(</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">jQuery</span><span class="p">)</span><span class="k">throw</span><span class="s2">&quot;SlickGrid requires jquery module to be loaded&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">jQuery</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">drag</span><span class="p">)</span><span class="k">throw</span><span class="s2">&quot;SlickGrid requires jquery.event.drag module to be loaded&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">Slick</span><span class="p">)</span><span class="k">throw</span><span class="s2">&quot;slick.core.js not loaded&quot;</span><span class="p">;</span></div><div class='line' id='LC24'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="nb">window</span><span class="p">,{</span><span class="nx">Slick</span><span class="o">:</span><span class="p">{</span><span class="nx">Grid</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">ba</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">function</span> <span class="nx">fb</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">H</span><span class="p">){</span><span class="nx">H</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">U</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="s2">&quot;width&quot;</span><span class="p">,</span><span class="kc">true</span><span class="p">));</span><span class="nx">Vb</span><span class="p">();</span><span class="nx">ma</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">enableTextSelectionOnCells</span><span class="o">||</span><span class="nx">v</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;selectstart.ui&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">).</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;input,textarea&quot;</span><span class="p">)});</span><span class="nx">hb</span><span class="p">();</span><span class="nx">Wb</span><span class="p">();</span><span class="nx">ib</span><span class="p">();</span><span class="nx">K</span><span class="p">();</span><span class="nx">Xb</span><span class="p">();</span><span class="nx">n</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;resize.slickgrid&quot;</span><span class="p">,</span><span class="nx">K</span><span class="p">);</span><span class="nx">v</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;scroll.slickgrid&quot;</span><span class="p">,</span><span class="nx">jb</span><span class="p">);</span><span class="nx">ca</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;contextmenu.slickgrid&quot;</span><span class="p">,</span><span class="nx">Yb</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;click.slickgrid&quot;</span><span class="p">,</span><span class="nx">Zb</span><span class="p">);</span><span class="nx">Ka</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;keydown.slickgrid&quot;</span><span class="p">,</span><span class="nx">kb</span><span class="p">);</span><span class="nx">B</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;keydown.slickgrid&quot;</span><span class="p">,</span><span class="nx">kb</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;click.slickgrid&quot;</span><span class="p">,</span><span class="nx">$b</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;dblclick.slickgrid&quot;</span><span class="p">,</span></div><div class='line' id='LC25'><span class="nx">ac</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;contextmenu.slickgrid&quot;</span><span class="p">,</span><span class="nx">bc</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;draginit&quot;</span><span class="p">,</span><span class="nx">cc</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;dragstart&quot;</span><span class="p">,</span><span class="nx">dc</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;drag&quot;</span><span class="p">,</span><span class="nx">ec</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;dragend&quot;</span><span class="p">,</span><span class="nx">fc</span><span class="p">).</span><span class="nx">delegate</span><span class="p">(</span><span class="s2">&quot;.slick-cell&quot;</span><span class="p">,</span><span class="s2">&quot;mouseenter&quot;</span><span class="p">,</span><span class="nx">gc</span><span class="p">).</span><span class="nx">delegate</span><span class="p">(</span><span class="s2">&quot;.slick-cell&quot;</span><span class="p">,</span><span class="s2">&quot;mouseleave&quot;</span><span class="p">,</span><span class="nx">hc</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">gb</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">--</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">O</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">===</span><span class="nx">a</span><span class="p">){</span><span class="nx">O</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">destroy</span><span class="o">&amp;&amp;</span><span class="nx">O</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">destroy</span><span class="p">();</span><span class="nx">O</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">break</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">Ub</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="s2">&quot;&lt;div style=&#39;position:absolute; top:-10000px; left:-10000px; width:100px; height:100px; overflow:scroll;&#39;&gt;&lt;/div&gt;&quot;</span><span class="p">).</span><span class="nx">appendTo</span><span class="p">(</span><span class="s2">&quot;body&quot;</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="p">{</span><span class="nx">width</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="p">()</span><span class="o">-</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">clientWidth</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="p">()</span><span class="o">-</span></div><div class='line' id='LC26'><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">clientHeight</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">remove</span><span class="p">();</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Ja</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">P</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">na</span><span class="o">?</span><span class="nx">U</span><span class="o">-</span><span class="nx">G</span><span class="p">.</span><span class="nx">width</span><span class="o">:</span><span class="nx">U</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">--</span><span class="p">;)</span><span class="nx">j</span><span class="o">=</span><span class="nx">j</span><span class="o">+</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">width</span><span class="o">||</span><span class="nx">La</span><span class="p">.</span><span class="nx">width</span><span class="p">);</span><span class="nx">P</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">fullWidthRows</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">j</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">P</span><span class="o">!=</span><span class="nx">b</span><span class="p">){</span><span class="nx">B</span><span class="p">.</span><span class="nx">width</span><span class="p">(</span><span class="nx">P</span><span class="p">);</span><span class="nx">da</span><span class="p">.</span><span class="nx">width</span><span class="p">(</span><span class="nx">P</span><span class="p">);</span><span class="nx">lb</span><span class="o">=</span><span class="nx">P</span><span class="o">&gt;</span><span class="nx">U</span><span class="o">-</span><span class="nx">G</span><span class="p">.</span><span class="nx">width</span><span class="p">}(</span><span class="nx">P</span><span class="o">!=</span><span class="nx">b</span><span class="o">||</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">Ma</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">ma</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">jquery</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;unselectable&quot;</span><span class="p">,</span><span class="s2">&quot;on&quot;</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;MozUserSelect&quot;</span><span class="p">,</span><span class="s2">&quot;none&quot;</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;selectstart.ui&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="kc">false</span><span class="p">})}</span><span class="kd">function</span> <span class="nx">ic</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">1</span><span class="nx">E6</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">browser</span><span class="p">.</span><span class="nx">mozilla</span><span class="o">?</span><span class="mi">5</span><span class="nx">E6</span><span class="o">:</span><span class="mi">1</span><span class="nx">E9</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="s2">&quot;&lt;div style=&#39;display:none&#39; /&gt;&quot;</span><span class="p">).</span><span class="nx">appendTo</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">);</span><span class="nx">a</span><span class="o">&lt;=</span><span class="nx">b</span><span class="p">;){</span><span class="nx">c</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;height&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="mi">1</span><span class="nx">E6</span><span class="p">);</span></div><div class='line' id='LC27'><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">height</span><span class="p">()</span><span class="o">!==</span><span class="nx">a</span><span class="o">+</span><span class="mi">1</span><span class="nx">E6</span><span class="p">)</span><span class="k">break</span><span class="p">;</span><span class="k">else</span> <span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="mi">1</span><span class="nx">E6</span><span class="p">}</span><span class="nx">c</span><span class="p">.</span><span class="nx">remove</span><span class="p">();</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Xb</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">B</span><span class="p">[</span><span class="mi">0</span><span class="p">];(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">)</span><span class="o">!=</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">!=</span><span class="kc">null</span><span class="p">;)(</span><span class="nx">a</span><span class="o">==</span><span class="nx">v</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">scrollWidth</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">clientWidth</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">scrollHeight</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">clientHeight</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;scroll.slickgrid&quot;</span><span class="p">,</span><span class="nx">mb</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">hb</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(){</span><span class="nx">e</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;ui-state-hover&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(){</span><span class="nx">e</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;ui-state-hover&quot;</span><span class="p">)}</span><span class="nx">t</span><span class="p">.</span><span class="nx">empty</span><span class="p">();</span><span class="nx">da</span><span class="p">.</span><span class="nx">empty</span><span class="p">();</span><span class="nx">I</span><span class="o">=</span><span class="p">{};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">La</span><span class="p">,</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">]);</span><span class="nx">I</span><span class="p">[</span><span class="nx">j</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="kd">var</span> <span class="nx">oa</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="s2">&quot;&lt;div class=&#39;ui-state-default slick-header-column&#39; id=&#39;&quot;</span><span class="o">+</span></div><div class='line' id='LC28'><span class="nx">z</span><span class="o">+</span><span class="nx">j</span><span class="p">.</span><span class="nx">id</span><span class="o">+</span><span class="s2">&quot;&#39; /&gt;&quot;</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="s2">&quot;&lt;span class=&#39;slick-column-name&#39;&gt;&quot;</span><span class="o">+</span><span class="nx">j</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s2">&quot;&lt;/span&gt;&quot;</span><span class="p">).</span><span class="nx">width</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">width</span><span class="o">-</span><span class="nx">V</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;title&quot;</span><span class="p">,</span><span class="nx">j</span><span class="p">.</span><span class="nx">toolTip</span><span class="o">||</span><span class="nx">j</span><span class="p">.</span><span class="nx">name</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;fieldId&quot;</span><span class="p">,</span><span class="nx">j</span><span class="p">.</span><span class="nx">id</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">headerCssClass</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">appendTo</span><span class="p">(</span><span class="nx">t</span><span class="p">);(</span><span class="nx">d</span><span class="p">.</span><span class="nx">enableColumnReorder</span><span class="o">||</span><span class="nx">j</span><span class="p">.</span><span class="nx">sortable</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">oa</span><span class="p">.</span><span class="nx">hover</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">j</span><span class="p">.</span><span class="nx">sortable</span><span class="o">&amp;&amp;</span><span class="nx">oa</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s2">&quot;&lt;span class=&#39;slick-sort-indicator&#39; /&gt;&quot;</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">showHeaderRow</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">(</span><span class="s2">&quot;&lt;div class=&#39;ui-state-default slick-headerrow-column l&quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot; r&quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;&#39;&gt;&lt;/div&gt;&quot;</span><span class="p">).</span><span class="nx">appendTo</span><span class="p">(</span><span class="nx">da</span><span class="p">)}</span><span class="nx">d</span><span class="p">.</span><span class="nx">showHeaderRow</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">(</span><span class="s2">&quot;&lt;div style=&#39;display:block;height:1px;width:10000px;position:absolute;top:0;left:0;&#39;&gt;&lt;/div&gt;&quot;</span><span class="p">).</span><span class="nx">appendTo</span><span class="p">(</span><span class="nx">Q</span><span class="p">);</span></div><div class='line' id='LC29'><span class="nx">ta</span><span class="p">(</span><span class="nx">r</span><span class="p">);</span><span class="nx">nb</span><span class="p">();</span><span class="nx">d</span><span class="p">.</span><span class="nx">enableColumnReorder</span><span class="o">&amp;&amp;</span><span class="nx">jc</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">Wb</span><span class="p">(){</span><span class="nx">t</span><span class="p">.</span><span class="nx">click</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">metaKey</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">metaKey</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">ctrlKey</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">).</span><span class="nx">hasClass</span><span class="p">(</span><span class="s2">&quot;slick-resizable-handle&quot;</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">).</span><span class="nx">closest</span><span class="p">(</span><span class="s2">&quot;.slick-header-column&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">Na</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;fieldId&quot;</span><span class="p">))];</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">sortable</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">().</span><span class="nx">commitCurrentEdit</span><span class="p">()){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">j</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">j</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="p">[</span><span class="nx">j</span><span class="p">].</span><span class="nx">columnId</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">id</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="nx">j</span><span class="p">];</span><span class="nx">c</span><span class="p">.</span><span class="nx">sortAsc</span><span class="o">=!</span><span class="nx">c</span><span class="p">.</span><span class="nx">sortAsc</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">metaKey</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">multiColumnSort</span><span class="p">)</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">shiftKey</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">metaKey</span><span class="o">||!</span><span class="nx">d</span><span class="p">.</span><span class="nx">multiColumnSort</span><span class="p">)</span><span class="nx">r</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="o">==</span><span class="mi">0</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC30'><span class="nx">r</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="nx">c</span><span class="o">=</span><span class="p">{</span><span class="nx">columnId</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span><span class="nx">sortAsc</span><span class="o">:</span><span class="kc">true</span><span class="p">};</span><span class="nx">r</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">)}}</span><span class="nx">ta</span><span class="p">(</span><span class="nx">r</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">multiColumnSort</span><span class="o">?</span><span class="nx">l</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">onSort</span><span class="p">,{</span><span class="nx">multiColumnSort</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">sortCols</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">sortCol</span><span class="o">:</span><span class="nx">f</span><span class="p">[</span><span class="nx">I</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">columnId</span><span class="p">]],</span><span class="nx">sortAsc</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">sortAsc</span><span class="p">}})},</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">l</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">onSort</span><span class="p">,{</span><span class="nx">multiColumnSort</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">sortCol</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">sortAsc</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">sortAsc</span><span class="p">},</span><span class="nx">a</span><span class="p">)}}}})}</span><span class="kd">function</span> <span class="nx">jc</span><span class="p">(){</span><span class="nx">t</span><span class="p">.</span><span class="nx">sortable</span><span class="p">({</span><span class="nx">containment</span><span class="o">:</span><span class="s2">&quot;parent&quot;</span><span class="p">,</span><span class="nx">axis</span><span class="o">:</span><span class="s2">&quot;x&quot;</span><span class="p">,</span><span class="nx">cursor</span><span class="o">:</span><span class="s2">&quot;default&quot;</span><span class="p">,</span><span class="nx">tolerance</span><span class="o">:</span><span class="s2">&quot;intersection&quot;</span><span class="p">,</span><span class="nx">helper</span><span class="o">:</span><span class="s2">&quot;clone&quot;</span><span class="p">,</span><span class="nx">placeholder</span><span class="o">:</span><span class="s2">&quot;slick-sortable-placeholder ui-state-default slick-header-column&quot;</span><span class="p">,</span><span class="nx">forcePlaceholderSize</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">start</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC31'><span class="nx">b</span><span class="p">){</span><span class="nx">e</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">helper</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;slick-header-column-active&quot;</span><span class="p">)},</span><span class="nx">beforeStop</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">e</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">helper</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;slick-header-column-active&quot;</span><span class="p">)},</span><span class="nx">stop</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">().</span><span class="nx">commitCurrentEdit</span><span class="p">()){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">sortable</span><span class="p">(</span><span class="s2">&quot;toArray&quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="p">[],</span><span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">j</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">j</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">Na</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">j</span><span class="p">].</span><span class="nx">replace</span><span class="p">(</span><span class="nx">z</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">))]);</span><span class="nx">ob</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">l</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">onColumnsReordered</span><span class="p">,{});</span><span class="nx">a</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">();</span><span class="nx">nb</span><span class="p">()}</span><span class="k">else</span> <span class="nx">e</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">sortable</span><span class="p">(</span><span class="s2">&quot;cancel&quot;</span><span class="p">)}})}</span><span class="kd">function</span> <span class="nx">nb</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">oa</span><span class="p">,</span><span class="nx">pb</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">g</span><span class="p">;</span><span class="nx">j</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">children</span><span class="p">();</span><span class="nx">j</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;.slick-resizable-handle&quot;</span><span class="p">).</span><span class="nx">remove</span><span class="p">();</span><span class="nx">j</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">resizable</span><span class="p">){</span><span class="nx">h</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC32'><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">);</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">}});</span><span class="nx">h</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="nx">m</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">h</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">forceFitColumns</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="o">&gt;=</span><span class="nx">g</span><span class="p">)){</span><span class="nx">e</span><span class="p">(</span><span class="nx">m</span><span class="p">);</span><span class="nx">e</span><span class="p">(</span><span class="s2">&quot;&lt;div class=&#39;slick-resizable-handle&#39; /&gt;&quot;</span><span class="p">).</span><span class="nx">appendTo</span><span class="p">(</span><span class="nx">m</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;dragstart&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">p</span><span class="p">().</span><span class="nx">commitCurrentEdit</span><span class="p">())</span><span class="k">return</span> <span class="kc">false</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">pageX</span><span class="p">;</span><span class="nx">e</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">parent</span><span class="p">().</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;slick-header-column-active&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">j</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">previousWidth</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">outerWidth</span><span class="p">()});</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">forceFitColumns</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">k</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">resizable</span><span class="p">){</span><span class="nx">h</span><span class="o">!==</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">maxWidth</span><span class="o">?</span><span class="nx">h</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">maxWidth</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">previousWidth</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">);</span><span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">previousWidth</span><span class="o">-</span></div><div class='line' id='LC33'><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">minWidth</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">R</span><span class="p">))}}}</span><span class="kd">var</span> <span class="nx">pa</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;=</span><span class="nx">k</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">resizable</span><span class="p">){</span><span class="nx">i</span><span class="o">!==</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">maxWidth</span><span class="o">?</span><span class="nx">i</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">maxWidth</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">previousWidth</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">);</span><span class="nx">pa</span><span class="o">=</span><span class="nx">pa</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">previousWidth</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">minWidth</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">R</span><span class="p">))}}</span><span class="nx">g</span><span class="o">===</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="mi">1</span><span class="nx">E5</span><span class="p">);</span><span class="nx">pa</span><span class="o">===</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">pa</span><span class="o">=</span><span class="mi">1</span><span class="nx">E5</span><span class="p">);</span><span class="nx">h</span><span class="o">===</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="mi">1</span><span class="nx">E5</span><span class="p">);</span><span class="nx">i</span><span class="o">===</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">1</span><span class="nx">E5</span><span class="p">);</span><span class="nx">pb</span><span class="o">=</span><span class="nx">c</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">);</span><span class="nx">oa</span><span class="o">=</span><span class="nx">c</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">pa</span><span class="p">,</span><span class="nx">h</span><span class="p">)}).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;drag&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">pb</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">oa</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">pageX</span><span class="p">))</span><span class="o">-</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">k</span><span class="p">;</span><span class="nx">a</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">--</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">resizable</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">minWidth</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">R</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">previousWidth</span><span class="o">+</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="nx">h</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">previousWidth</span><span class="o">-</span></div><div class='line' id='LC34'><span class="nx">e</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">e</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">previousWidth</span><span class="o">+</span><span class="nx">h</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">}}}</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">forceFitColumns</span><span class="p">){</span><span class="nx">h</span><span class="o">=-</span><span class="nx">g</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">k</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">resizable</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">maxWidth</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">maxWidth</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">previousWidth</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="nx">h</span><span class="o">-</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">maxWidth</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">previousWidth</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">maxWidth</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">previousWidth</span><span class="o">+</span><span class="nx">h</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">}}}}</span><span class="k">else</span><span class="p">{</span><span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">k</span><span class="p">;</span><span class="nx">a</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">--</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">resizable</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">maxWidth</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">maxWidth</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">previousWidth</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="nx">h</span><span class="o">-</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">maxWidth</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">previousWidth</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">maxWidth</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">previousWidth</span><span class="o">+</span><span class="nx">h</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">forceFitColumns</span><span class="p">){</span><span class="nx">h</span><span class="o">=-</span><span class="nx">g</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">k</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span></div><div class='line' id='LC35'><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">resizable</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">minWidth</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">R</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">previousWidth</span><span class="o">+</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="nx">h</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">previousWidth</span><span class="o">-</span><span class="nx">e</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">e</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">previousWidth</span><span class="o">+</span><span class="nx">h</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">}}}}}</span><span class="nx">qb</span><span class="p">();</span><span class="nx">d</span><span class="p">.</span><span class="nx">syncColumnCellResize</span><span class="o">&amp;&amp;</span><span class="nx">Ma</span><span class="p">()}).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;dragend&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">;</span><span class="nx">e</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">parent</span><span class="p">().</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;slick-header-column-active&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="nx">a</span><span class="p">]).</span><span class="nx">outerWidth</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">previousWidth</span><span class="o">!==</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">rerenderOnResize</span><span class="o">&amp;&amp;</span><span class="nx">W</span><span class="p">()}</span><span class="nx">Ja</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span><span class="nx">J</span><span class="p">();</span><span class="nx">l</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">onColumnsResized</span><span class="p">,{})})}})}</span><span class="kd">function</span> <span class="nx">Oa</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">([</span><span class="s2">&quot;borderTopWidth&quot;</span><span class="p">,</span><span class="s2">&quot;borderBottomWidth&quot;</span><span class="p">,</span><span class="s2">&quot;paddingTop&quot;</span><span class="p">,</span><span class="s2">&quot;paddingBottom&quot;</span><span class="p">],</span></div><div class='line' id='LC36'><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">j</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="p">(</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">j</span><span class="p">))</span><span class="o">||</span><span class="mi">0</span><span class="p">)});</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Vb</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;borderLeftWidth&quot;</span><span class="p">,</span><span class="s2">&quot;borderRightWidth&quot;</span><span class="p">,</span><span class="s2">&quot;paddingLeft&quot;</span><span class="p">,</span><span class="s2">&quot;paddingRight&quot;</span><span class="p">],</span><span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;borderTopWidth&quot;</span><span class="p">,</span><span class="s2">&quot;borderBottomWidth&quot;</span><span class="p">,</span><span class="s2">&quot;paddingTop&quot;</span><span class="p">,</span><span class="s2">&quot;paddingBottom&quot;</span><span class="p">];</span><span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="s2">&quot;&lt;div class=&#39;ui-state-default slick-header-column&#39; style=&#39;visibility:hidden&#39;&gt;-&lt;/div&gt;&quot;</span><span class="p">).</span><span class="nx">appendTo</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="nx">V</span><span class="o">=</span><span class="nx">Pa</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">V</span><span class="o">=</span><span class="nx">V</span><span class="o">+</span><span class="p">(</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="o">||</span><span class="mi">0</span><span class="p">)});</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">Pa</span><span class="o">=</span><span class="nx">Pa</span><span class="o">+</span><span class="p">(</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="o">||</span><span class="mi">0</span><span class="p">)});</span><span class="nx">a</span><span class="p">.</span><span class="nx">remove</span><span class="p">();</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="s2">&quot;&lt;div class=&#39;slick-row&#39; /&gt;&quot;</span><span class="p">).</span><span class="nx">appendTo</span><span class="p">(</span><span class="nx">B</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="s2">&quot;&lt;div class=&#39;slick-cell&#39; id=&#39;&#39; style=&#39;visibility:hidden&#39;&gt;-&lt;/div&gt;&quot;</span><span class="p">).</span><span class="nx">appendTo</span><span class="p">(</span><span class="nx">j</span><span class="p">);</span></div><div class='line' id='LC37'><span class="nx">ua</span><span class="o">=</span><span class="nx">va</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">ua</span><span class="o">=</span><span class="nx">ua</span><span class="o">+</span><span class="p">(</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="o">||</span><span class="mi">0</span><span class="p">)});</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">va</span><span class="o">=</span><span class="nx">va</span><span class="o">+</span><span class="p">(</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="o">||</span><span class="mi">0</span><span class="p">)});</span><span class="nx">j</span><span class="p">.</span><span class="nx">remove</span><span class="p">();</span><span class="nx">R</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">V</span><span class="p">,</span><span class="nx">ua</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">ib</span><span class="p">(){</span><span class="nx">X</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="s2">&quot;&lt;style type=&#39;text/css&#39; rel=&#39;stylesheet&#39; /&gt;&quot;</span><span class="p">).</span><span class="nx">appendTo</span><span class="p">(</span><span class="nx">e</span><span class="p">(</span><span class="s2">&quot;head&quot;</span><span class="p">));</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">z</span><span class="o">+</span><span class="s2">&quot; .slick-header-column { left: 1000px; }&quot;</span><span class="p">,</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">z</span><span class="o">+</span><span class="s2">&quot; .slick-top-panel { height:&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">topPanelHeight</span><span class="o">+</span><span class="s2">&quot;px; }&quot;</span><span class="p">,</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">z</span><span class="o">+</span><span class="s2">&quot; .slick-headerrow-columns { height:&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">headerRowHeight</span><span class="o">+</span><span class="s2">&quot;px; }&quot;</span><span class="p">,</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">z</span><span class="o">+</span><span class="s2">&quot; .slick-cell { height:&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">rowHeight</span><span class="o">-</span><span class="nx">va</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;px; }&quot;</span><span class="p">,</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">z</span><span class="o">+</span><span class="s2">&quot; .slick-row { height:&quot;</span><span class="o">+</span></div><div class='line' id='LC38'><span class="nx">d</span><span class="p">.</span><span class="nx">rowHeight</span><span class="o">+</span><span class="s2">&quot;px; }&quot;</span><span class="p">],</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">z</span><span class="o">+</span><span class="s2">&quot; .l&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; { }&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">z</span><span class="o">+</span><span class="s2">&quot; .r&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; { }&quot;</span><span class="p">)}</span><span class="nx">X</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">styleSheet</span><span class="o">?</span><span class="nx">X</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">styleSheet</span><span class="p">.</span><span class="nx">cssText</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">X</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">appendChild</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)))}</span><span class="kd">function</span> <span class="nx">l</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="k">new</span> <span class="nx">Slick</span><span class="p">.</span><span class="nx">EventData</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="p">{};</span><span class="nx">b</span><span class="p">.</span><span class="nx">grid</span><span class="o">=</span><span class="nx">i</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">notify</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">i</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">p</span><span class="p">(){</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">editorLock</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Na</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">I</span><span class="p">[</span><span class="nx">a</span><span class="p">]}</span><span class="kd">function</span> <span class="nx">Qa</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">[],</span><span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">na</span><span class="o">?</span><span class="nx">U</span><span class="o">-</span><span class="nx">G</span><span class="p">.</span><span class="nx">width</span><span class="o">:</span><span class="nx">U</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">resizable</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">j</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">minWidth</span><span class="p">,</span></div><div class='line' id='LC39'><span class="nx">R</span><span class="p">)))}</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="p">;){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="p">(</span><span class="nx">d</span><span class="o">-</span><span class="nx">h</span><span class="p">)</span><span class="o">/</span><span class="nx">j</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">resizable</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="nx">k</span><span class="o">&lt;=</span><span class="nx">b</span><span class="p">.</span><span class="nx">minWidth</span><span class="o">||</span><span class="nx">k</span><span class="o">&lt;=</span><span class="nx">R</span><span class="p">)){</span><span class="nx">b</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">minWidth</span><span class="p">,</span><span class="nx">R</span><span class="p">);</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">g</span><span class="o">*</span><span class="p">(</span><span class="nx">k</span><span class="o">-</span><span class="nx">b</span><span class="p">))</span><span class="o">||</span><span class="mi">1</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">k</span><span class="o">-</span><span class="nx">b</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="o">-</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">j</span><span class="o">-</span><span class="nx">i</span><span class="p">;</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">-</span><span class="nx">i</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">==</span><span class="nx">d</span><span class="p">)</span><span class="k">break</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">}</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;){</span><span class="nx">j</span><span class="o">=</span><span class="nx">h</span><span class="o">/</span><span class="nx">d</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">resizable</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">maxWidth</span><span class="o">&lt;=</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="p">)){</span><span class="nx">g</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">j</span><span class="o">*</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="p">)</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">maxWidth</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="o">||</span><span class="mi">1</span><span class="nx">E6</span><span class="p">)</span><span class="o">||</span><span class="mi">1</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="o">+</span><span class="nx">g</span><span class="p">;</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">+</span><span class="nx">g</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">==</span><span class="nx">d</span><span class="p">)</span><span class="k">break</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">}</span><span class="nx">d</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">){</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">rerenderOnResize</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">width</span><span class="o">!=</span></div><div class='line' id='LC40'><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="kc">true</span><span class="p">);</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">width</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">]}</span><span class="nx">qb</span><span class="p">();</span><span class="nx">Ja</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="nx">W</span><span class="p">();</span><span class="nx">J</span><span class="p">()}}</span><span class="kd">function</span> <span class="nx">qb</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">children</span><span class="p">(),</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">]);</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="p">()</span><span class="o">!==</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">width</span><span class="o">-</span><span class="nx">V</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">width</span><span class="o">-</span><span class="nx">V</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">Ma</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">width</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">Y</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">styleSheets</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">((</span><span class="nx">g</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">ownerNode</span><span class="o">||</span><span class="nx">g</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">owningElement</span><span class="p">)</span><span class="o">==</span><span class="nx">X</span><span class="p">[</span><span class="mi">0</span><span class="p">]){</span><span class="nx">Y</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">break</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">Y</span><span class="p">)</span><span class="k">throw</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Cannot find stylesheet.&quot;</span><span class="p">);</span><span class="nx">Ra</span><span class="o">=</span><span class="p">[];</span><span class="nx">Sa</span><span class="o">=</span><span class="p">[];</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">Y</span><span class="p">.</span><span class="nx">cssRules</span><span class="o">||</span><span class="nx">Y</span><span class="p">.</span><span class="nx">rules</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span></div><div class='line' id='LC41'><span class="nx">g</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">selectorText</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="sr">/\.l\d+/</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">i</span><span class="p">)){</span><span class="nx">h</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="nx">h</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">length</span><span class="o">-</span><span class="mi">2</span><span class="p">),</span><span class="mi">10</span><span class="p">);</span><span class="nx">Ra</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">a</span><span class="p">]}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="sr">/\.r\d+/</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">i</span><span class="p">)){</span><span class="nx">h</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="nx">h</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">length</span><span class="o">-</span><span class="mi">2</span><span class="p">),</span><span class="mi">10</span><span class="p">);</span><span class="nx">Sa</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">a</span><span class="p">]}}}</span><span class="nx">a</span><span class="o">=</span><span class="nx">Ra</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="nx">b</span><span class="o">=</span><span class="nx">Sa</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">right</span><span class="o">=</span><span class="nx">P</span><span class="o">-</span><span class="nx">c</span><span class="o">-</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">+</span><span class="nx">f</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">width</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">ta</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">r</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">children</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;slick-header-column-sorted&quot;</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;.slick-sort-indicator&quot;</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;slick-sort-indicator-asc slick-sort-indicator-desc&quot;</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">sortAsc</span><span class="o">==</span><span class="kc">null</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">sortAsc</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">I</span><span class="p">[</span><span class="nx">d</span><span class="p">.</span><span class="nx">columnId</span><span class="p">];</span></div><div class='line' id='LC42'><span class="nx">e</span><span class="o">!=</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">eq</span><span class="p">(</span><span class="nx">e</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;slick-header-column-sorted&quot;</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;.slick-sort-indicator&quot;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">sortAsc</span><span class="o">?</span><span class="s2">&quot;slick-sort-indicator-asc&quot;</span><span class="o">:</span><span class="s2">&quot;slick-sort-indicator-desc&quot;</span><span class="p">)})}</span><span class="kd">function</span> <span class="nx">rb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">Ta</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{},</span><span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">j</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">j</span><span class="o">++</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">j</span><span class="p">].</span><span class="nx">fromRow</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;=</span><span class="nx">b</span><span class="p">[</span><span class="nx">j</span><span class="p">].</span><span class="nx">toRow</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">){</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">||</span><span class="nx">Ta</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="p">{};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">j</span><span class="p">].</span><span class="nx">fromCell</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;=</span><span class="nx">b</span><span class="p">[</span><span class="nx">j</span><span class="p">].</span><span class="nx">toCell</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">sb</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">))</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">][</span><span class="nx">f</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">id</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">selectedCellCssClass</span><span class="p">}</span><span class="nx">tb</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">selectedCellCssClass</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">l</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">onSelectedRowsChanged</span><span class="p">,{</span><span class="nx">rows</span><span class="o">:</span><span class="nx">ub</span><span class="p">()},</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">ob</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">){</span><span class="nx">W</span><span class="p">();</span><span class="nx">hb</span><span class="p">();</span><span class="nx">X</span><span class="p">.</span><span class="nx">remove</span><span class="p">();</span><span class="nx">Y</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">ib</span><span class="p">();</span></div><div class='line' id='LC43'><span class="nx">K</span><span class="p">();</span><span class="nx">Ma</span><span class="p">();</span><span class="nx">jb</span><span class="p">()}}</span><span class="kd">function</span> <span class="nx">q</span><span class="p">(){</span><span class="k">return</span> <span class="nx">g</span><span class="p">.</span><span class="nx">getLength</span><span class="o">?</span><span class="nx">g</span><span class="p">.</span><span class="nx">getLength</span><span class="p">()</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">}</span><span class="kd">function</span> <span class="nx">C</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">g</span><span class="p">.</span><span class="nx">getItem</span><span class="o">?</span><span class="nx">g</span><span class="p">.</span><span class="nx">getItem</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">g</span><span class="p">[</span><span class="nx">a</span><span class="p">]}</span><span class="kd">function</span> <span class="nx">ea</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">w</span><span class="p">;</span><span class="nx">fa</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">ga</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">a</span><span class="o">/</span><span class="nx">ha</span><span class="p">));</span><span class="nx">w</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">fa</span><span class="o">*</span><span class="nx">wa</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">-</span><span class="nx">w</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">w</span><span class="o">!=</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">xa</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">vb</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">top</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">bottom</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span> <span class="k">in</span> <span class="nx">x</span><span class="p">)</span><span class="nx">x</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="nx">e</span><span class="o">*</span><span class="nx">d</span><span class="p">.</span><span class="nx">rowHeight</span><span class="o">-</span><span class="nx">w</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">ia</span><span class="o">!=</span><span class="nx">a</span><span class="p">){</span><span class="nx">Z</span><span class="o">=</span><span class="nx">ia</span><span class="o">+</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">a</span><span class="o">+</span><span class="nx">w</span><span class="o">?</span><span class="mi">1</span><span class="o">:-</span><span class="mi">1</span><span class="p">;</span><span class="nx">v</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">scrollTop</span><span class="o">=</span><span class="nx">Ua</span><span class="o">=</span><span class="nx">y</span><span class="o">=</span><span class="nx">ia</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">l</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">onViewportChanged</span><span class="p">,{})}}</span><span class="kd">function</span> <span class="nx">ya</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">getItemMetadata</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">getItemMetadata</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">columns</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">columns</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">columns</span><span class="p">[</span><span class="nx">I</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">id</span><span class="p">]]);</span><span class="k">return</span> <span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">formatter</span><span class="o">||</span></div><div class='line' id='LC44'><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">formatter</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">formatter</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">formatterFactory</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">formatterFactory</span><span class="p">.</span><span class="nx">getFormatter</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">defaultFormatter</span><span class="p">}</span><span class="kd">function</span> <span class="nx">wb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">getItemMetadata</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">getItemMetadata</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">columns</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">id</span><span class="p">].</span><span class="nx">editor</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">e</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">id</span><span class="p">].</span><span class="nx">editor</span><span class="o">:</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">editor</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">e</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">editor</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">editor</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">editorFactory</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">editorFactory</span><span class="p">.</span><span class="nx">getEditor</span><span class="p">(</span><span class="nx">c</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">za</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">dataItemColumnValueExtractor</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataItemColumnValueExtractor</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">field</span><span class="p">]}</span><span class="kd">function</span> <span class="nx">vb</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span> <span class="k">in</span> <span class="nx">x</span><span class="p">)(</span><span class="nx">b</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="mi">10</span><span class="p">))</span><span class="o">!==</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">&lt;</span></div><div class='line' id='LC45'><span class="nx">a</span><span class="p">.</span><span class="nx">top</span><span class="o">||</span><span class="nx">b</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">bottom</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">Aa</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">W</span><span class="p">(){</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="nx">L</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span> <span class="k">in</span> <span class="nx">x</span><span class="p">)</span><span class="nx">Aa</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">Aa</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">x</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">B</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">delete</span> <span class="nx">x</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">delete</span> <span class="nx">Ba</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="nx">Va</span><span class="o">--</span><span class="p">;</span><span class="nx">xb</span><span class="o">++</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">yb</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">Z</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">){</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="o">===</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">L</span><span class="p">();</span><span class="nx">x</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]]</span><span class="o">&amp;&amp;</span><span class="nx">Aa</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">])}}}</span><span class="kd">function</span> <span class="nx">zb</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">yb</span><span class="p">([</span><span class="nx">a</span><span class="p">])}</span><span class="kd">function</span> <span class="nx">Wa</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">[</span><span class="nx">a</span><span class="p">]){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="p">(</span><span class="nx">x</span><span class="p">[</span><span class="nx">a</span><span class="p">]).</span><span class="nx">children</span><span class="p">().</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">C</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">a</span><span class="o">===</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">===</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="o">?</span><span class="nx">k</span><span class="p">.</span><span class="nx">loadValue</span><span class="p">(</span><span class="nx">C</span><span class="p">(</span><span class="nx">m</span><span class="p">))</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">e</span><span class="o">?</span><span class="nx">ya</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">)(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">za</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">d</span><span class="p">,</span><span class="nx">C</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="nx">$</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)});</span><span class="nx">Xa</span><span class="p">(</span><span class="nx">a</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">K</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">){</span><span class="nx">s</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">autoHeight</span><span class="o">?</span></div><div class='line' id='LC46'><span class="nx">d</span><span class="p">.</span><span class="nx">rowHeight</span><span class="o">*</span><span class="p">(</span><span class="nx">q</span><span class="p">()</span><span class="o">+</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">enableAddRow</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">leaveSpaceForNewRows</span><span class="o">?</span><span class="nx">Ca</span><span class="o">-</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">))</span><span class="o">:</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="s2">&quot;height&quot;</span><span class="p">,</span><span class="kc">true</span><span class="p">))</span><span class="o">-</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">ca</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="s2">&quot;height&quot;</span><span class="p">))</span><span class="o">-</span><span class="nx">Oa</span><span class="p">(</span><span class="nx">ca</span><span class="p">)</span><span class="o">-</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">showTopPanel</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">topPanelHeight</span><span class="o">+</span><span class="nx">Oa</span><span class="p">(</span><span class="nx">aa</span><span class="p">)</span><span class="o">:</span><span class="mi">0</span><span class="p">)</span><span class="o">-</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">showHeaderRow</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">headerRowHeight</span><span class="o">+</span><span class="nx">Oa</span><span class="p">(</span><span class="nx">Q</span><span class="p">)</span><span class="o">:</span><span class="mi">0</span><span class="p">);</span><span class="nx">Ca</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">s</span><span class="o">/</span><span class="nx">d</span><span class="p">.</span><span class="nx">rowHeight</span><span class="p">);</span><span class="nx">U</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="s2">&quot;width&quot;</span><span class="p">,</span><span class="kc">true</span><span class="p">));</span><span class="nx">v</span><span class="p">.</span><span class="nx">height</span><span class="p">(</span><span class="nx">s</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">forceFitColumns</span><span class="o">&amp;&amp;</span><span class="nx">Qa</span><span class="p">();</span><span class="nx">Da</span><span class="p">();</span><span class="nx">J</span><span class="p">()}}</span><span class="kd">function</span> <span class="nx">Da</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">){</span><span class="nx">Ya</span><span class="o">=</span><span class="nx">q</span><span class="p">()</span><span class="o">+</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">enableAddRow</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">leaveSpaceForNewRows</span><span class="o">?</span><span class="nx">Ca</span><span class="o">-</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">);</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">na</span><span class="p">;</span><span class="nx">na</span><span class="o">=!</span><span class="nx">d</span><span class="p">.</span><span class="nx">autoHeight</span><span class="o">&amp;&amp;</span><span class="nx">Ya</span><span class="o">*</span><span class="nx">d</span><span class="p">.</span><span class="nx">rowHeight</span><span class="o">&gt;</span><span class="nx">s</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">enableAddRow</span><span class="o">?</span><span class="nx">q</span><span class="p">()</span><span class="o">:</span><span class="nx">q</span><span class="p">()</span><span class="o">-</span></div><div class='line' id='LC47'><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">x</span><span class="p">)</span><span class="nx">c</span><span class="o">&gt;=</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">Aa</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">M</span><span class="p">;</span><span class="nx">N</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">rowHeight</span><span class="o">*</span><span class="nx">Ya</span><span class="p">,</span><span class="nx">s</span><span class="o">-</span><span class="nx">G</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">N</span><span class="o">&lt;</span><span class="nx">A</span><span class="p">){</span><span class="nx">M</span><span class="o">=</span><span class="nx">ha</span><span class="o">=</span><span class="nx">N</span><span class="p">;</span><span class="nx">ga</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">wa</span><span class="o">=</span><span class="mi">0</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">M</span><span class="o">=</span><span class="nx">A</span><span class="p">;</span><span class="nx">ha</span><span class="o">=</span><span class="nx">M</span><span class="o">/</span><span class="mi">100</span><span class="p">;</span><span class="nx">ga</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">N</span><span class="o">/</span><span class="nx">ha</span><span class="p">);</span><span class="nx">wa</span><span class="o">=</span><span class="p">(</span><span class="nx">N</span><span class="o">-</span><span class="nx">M</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="nx">ga</span><span class="o">-</span><span class="mi">1</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="o">!==</span><span class="nx">b</span><span class="p">){</span><span class="nx">B</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;height&quot;</span><span class="p">,</span><span class="nx">M</span><span class="p">);</span><span class="nx">y</span><span class="o">=</span><span class="nx">v</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">scrollTop</span><span class="p">}</span><span class="nx">c</span><span class="o">=</span><span class="nx">y</span><span class="o">+</span><span class="nx">w</span><span class="o">&lt;=</span><span class="nx">N</span><span class="o">-</span><span class="nx">s</span><span class="p">;</span><span class="nx">N</span><span class="o">==</span><span class="mi">0</span><span class="o">||</span><span class="nx">y</span><span class="o">==</span><span class="mi">0</span><span class="o">?</span><span class="nx">fa</span><span class="o">=</span><span class="nx">w</span><span class="o">=</span><span class="mi">0</span><span class="o">:</span><span class="nx">c</span><span class="o">?</span><span class="nx">ea</span><span class="p">(</span><span class="nx">y</span><span class="o">+</span><span class="nx">w</span><span class="p">)</span><span class="o">:</span><span class="nx">ea</span><span class="p">(</span><span class="nx">N</span><span class="o">-</span><span class="nx">s</span><span class="p">);</span><span class="nx">M</span><span class="o">!=</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">autoHeight</span><span class="o">&amp;&amp;</span><span class="nx">K</span><span class="p">();</span><span class="nx">d</span><span class="p">.</span><span class="nx">forceFitColumns</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">!=</span><span class="nx">na</span><span class="o">&amp;&amp;</span><span class="nx">Qa</span><span class="p">();</span><span class="nx">Ja</span><span class="p">(</span><span class="kc">false</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">xa</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">==</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">y</span><span class="p">);</span><span class="k">return</span><span class="p">{</span><span class="nx">top</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">((</span><span class="nx">a</span><span class="o">+</span><span class="nx">w</span><span class="p">)</span><span class="o">/</span><span class="nx">d</span><span class="p">.</span><span class="nx">rowHeight</span><span class="p">),</span><span class="nx">bottom</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">((</span><span class="nx">a</span><span class="o">+</span><span class="nx">w</span><span class="o">+</span><span class="nx">s</span><span class="p">)</span><span class="o">/</span><span class="nx">d</span><span class="p">.</span><span class="nx">rowHeight</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">Ab</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">xa</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">s</span><span class="o">/</span><span class="nx">d</span><span class="p">.</span><span class="nx">rowHeight</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">Z</span><span class="o">==-</span><span class="mi">1</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">top</span><span class="o">-</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">bottom</span><span class="o">=</span></div><div class='line' id='LC48'><span class="nx">a</span><span class="p">.</span><span class="nx">bottom</span><span class="o">+</span><span class="mi">3</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">Z</span><span class="o">==</span><span class="mi">1</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">top</span><span class="o">-</span><span class="mi">3</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">bottom</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">bottom</span><span class="o">+</span><span class="nx">b</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">a</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">top</span><span class="o">-</span><span class="mi">3</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">bottom</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">bottom</span><span class="o">+</span><span class="mi">3</span><span class="p">}</span><span class="nx">a</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">top</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">bottom</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">enableAddRow</span><span class="o">?</span><span class="nx">q</span><span class="p">()</span><span class="o">:</span><span class="nx">q</span><span class="p">()</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">bottom</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Bb</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">enableAsyncPostRender</span><span class="p">){</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="nx">Za</span><span class="p">);</span><span class="nx">Za</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">Cb</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">asyncPostRenderDelay</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">Xa</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">delete</span> <span class="nx">Ba</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="nx">ja</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">ja</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">qa</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">qa</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">Bb</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">J</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">xa</span><span class="p">(),</span><span class="nx">b</span><span class="o">=</span><span class="nx">Ab</span><span class="p">();</span><span class="nx">vb</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">B</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">e</span><span class="o">=</span><span class="p">[];</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="p">[],</span><span class="nx">h</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">top</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;=</span><span class="nx">b</span><span class="p">.</span><span class="nx">bottom</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">x</span><span class="p">[</span><span class="nx">c</span><span class="p">]){</span><span class="nx">Va</span><span class="o">++</span><span class="p">;</span><span class="nx">k</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span></div><div class='line' id='LC49'><span class="nx">C</span><span class="p">(</span><span class="nx">n</span><span class="p">),</span><span class="nx">p</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="s2">&quot;slick-row &quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">q</span><span class="p">()</span><span class="o">&amp;&amp;!</span><span class="nx">v</span><span class="o">?</span><span class="s2">&quot; loading&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nx">n</span><span class="o">%</span><span class="mi">2</span><span class="o">==</span><span class="mi">1</span><span class="o">?</span><span class="s2">&quot; odd&quot;</span><span class="o">:</span><span class="s2">&quot; even&quot;</span><span class="p">),</span><span class="nx">s</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">getItemMetadata</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">getItemMetadata</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span><span class="nx">s</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">cssClasses</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="nx">p</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">s</span><span class="p">.</span><span class="nx">cssClasses</span><span class="p">));</span><span class="nx">l</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;&lt;div class=&#39;ui-widget-content &quot;</span><span class="o">+</span><span class="nx">p</span><span class="o">+</span><span class="s2">&quot;&#39; row=&#39;&quot;</span><span class="o">+</span><span class="nx">n</span><span class="o">+</span><span class="s2">&quot;&#39; style=&#39;top:&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">rowHeight</span><span class="o">*</span><span class="nx">n</span><span class="o">-</span><span class="nx">w</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;px&#39;&gt;&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">s</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">A</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">r</span><span class="o">&lt;</span><span class="nx">A</span><span class="p">;</span><span class="nx">r</span><span class="o">++</span><span class="p">){</span><span class="nx">t</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">r</span><span class="p">];</span><span class="nx">s</span><span class="o">=</span><span class="nx">$</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">);</span><span class="nx">p</span><span class="o">=</span><span class="s2">&quot;slick-cell l&quot;</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="s2">&quot; r&quot;</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">r</span><span class="o">+</span><span class="nx">s</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">cssClass</span><span class="o">?</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">t</span><span class="p">.</span><span class="nx">cssClass</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">n</span><span class="o">===</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="o">===</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="nx">p</span><span class="o">+</span><span class="s2">&quot; active&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">z</span> <span class="k">in</span> <span class="nx">D</span><span class="p">)</span><span class="nx">D</span><span class="p">[</span><span class="nx">z</span><span class="p">][</span><span class="nx">n</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">D</span><span class="p">[</span><span class="nx">z</span><span class="p">][</span><span class="nx">n</span><span class="p">][</span><span class="nx">t</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="nx">p</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">D</span><span class="p">[</span><span class="nx">z</span><span class="p">][</span><span class="nx">n</span><span class="p">][</span><span class="nx">t</span><span class="p">.</span><span class="nx">id</span><span class="p">]));</span><span class="nx">l</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;&lt;div class=&#39;&quot;</span><span class="o">+</span></div><div class='line' id='LC50'><span class="nx">p</span><span class="o">+</span><span class="s2">&quot;&#39;&gt;&quot;</span><span class="p">);</span><span class="nx">v</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">ya</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">t</span><span class="p">)(</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">za</span><span class="p">(</span><span class="nx">v</span><span class="p">,</span><span class="nx">t</span><span class="p">),</span><span class="nx">t</span><span class="p">,</span><span class="nx">v</span><span class="p">));</span><span class="nx">l</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;&lt;/div&gt;&quot;</span><span class="p">);</span><span class="nx">s</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="nx">r</span><span class="o">+</span><span class="p">(</span><span class="nx">s</span><span class="o">-</span><span class="mi">1</span><span class="p">))}</span><span class="nx">l</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;&lt;/div&gt;&quot;</span><span class="p">);</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="o">===</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="kc">true</span><span class="p">);</span><span class="nx">Db</span><span class="o">++</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">x</span><span class="p">[</span><span class="nx">k</span><span class="p">[</span><span class="nx">c</span><span class="p">]]</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">);</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">o</span><span class="o">=</span><span class="nx">E</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">u</span><span class="p">))}</span><span class="nx">ja</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">top</span><span class="p">;</span><span class="nx">qa</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">enableAddRow</span><span class="o">?</span><span class="nx">q</span><span class="p">()</span><span class="o">:</span><span class="nx">q</span><span class="p">()</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">bottom</span><span class="p">);</span><span class="nx">Bb</span><span class="p">();</span><span class="nx">Ua</span><span class="o">=</span><span class="nx">y</span><span class="p">;</span><span class="nx">Ea</span><span class="o">=</span><span class="kc">null</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">jb</span><span class="p">(){</span><span class="nx">y</span><span class="o">=</span><span class="nx">v</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">scrollTop</span><span class="p">;</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">v</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">scrollLeft</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">y</span><span class="o">-</span><span class="nx">ia</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">!==</span><span class="nx">Eb</span><span class="p">){</span><span class="nx">Eb</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">ca</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">scrollLeft</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">aa</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">scrollLeft</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">Q</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">scrollLeft</span><span class="o">=</span><span class="nx">a</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">Z</span><span class="o">=</span><span class="nx">ia</span><span class="o">&lt;</span></div><div class='line' id='LC51'><span class="nx">y</span><span class="o">?</span><span class="mi">1</span><span class="o">:-</span><span class="mi">1</span><span class="p">;</span><span class="nx">ia</span><span class="o">=</span><span class="nx">y</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">s</span><span class="p">)</span><span class="nx">ea</span><span class="p">(</span><span class="nx">y</span><span class="o">+</span><span class="nx">w</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="nx">b</span><span class="o">=</span><span class="nx">w</span><span class="p">;</span><span class="nx">fa</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">ga</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">y</span><span class="o">*</span><span class="p">((</span><span class="nx">N</span><span class="o">-</span><span class="nx">s</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="nx">M</span><span class="o">-</span><span class="nx">s</span><span class="p">))</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">/</span><span class="nx">ha</span><span class="p">)));</span><span class="nx">w</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">fa</span><span class="o">*</span><span class="nx">wa</span><span class="p">);</span><span class="nx">b</span><span class="o">!=</span><span class="nx">w</span><span class="o">&amp;&amp;</span><span class="nx">W</span><span class="p">()}</span><span class="nx">Ea</span><span class="o">&amp;&amp;</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="nx">Ea</span><span class="p">);</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">Ua</span><span class="o">-</span><span class="nx">y</span><span class="p">)</span><span class="o">&lt;</span><span class="nx">s</span><span class="o">?</span><span class="nx">J</span><span class="p">()</span><span class="o">:</span><span class="nx">Ea</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">J</span><span class="p">,</span><span class="mi">50</span><span class="p">);</span><span class="nx">l</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">onViewportChanged</span><span class="p">,{})}</span><span class="nx">l</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">onScroll</span><span class="p">,{</span><span class="nx">scrollLeft</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">scrollTop</span><span class="o">:</span><span class="nx">y</span><span class="p">})}</span><span class="kd">function</span> <span class="nx">Cb</span><span class="p">(){</span><span class="k">for</span><span class="p">(;</span><span class="nx">ja</span><span class="o">&lt;=</span><span class="nx">qa</span><span class="p">;){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">Z</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">?</span><span class="nx">ja</span><span class="o">++:</span><span class="nx">qa</span><span class="o">--</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">x</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="nx">Ba</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">||</span><span class="nx">a</span><span class="o">&gt;=</span><span class="nx">q</span><span class="p">())){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">C</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">i</span><span class="p">;</span><span class="o">++</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="nx">h</span><span class="p">.</span><span class="nx">asyncPostRender</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">asyncPostRender</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">ja</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">);</span><span class="o">++</span><span class="nx">g</span><span class="p">}</span><span class="nx">Ba</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">Za</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">Cb</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">asyncPostRenderDelay</span><span class="p">);</span></div><div class='line' id='LC52'><span class="k">break</span><span class="p">}}}</span><span class="kd">function</span> <span class="nx">$a</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span> <span class="k">in</span> <span class="nx">x</span><span class="p">){</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">[</span><span class="nx">h</span><span class="p">];</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="nx">h</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span> <span class="k">in</span> <span class="nx">g</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">f</span><span class="o">||</span><span class="nx">g</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">!=</span><span class="nx">f</span><span class="p">[</span><span class="nx">d</span><span class="p">])(</span><span class="nx">c</span><span class="o">=</span><span class="nx">E</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">I</span><span class="p">[</span><span class="nx">d</span><span class="p">]))</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="nx">d</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span> <span class="k">in</span> <span class="nx">f</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">g</span><span class="o">||</span><span class="nx">g</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">!=</span><span class="nx">f</span><span class="p">[</span><span class="nx">d</span><span class="p">])(</span><span class="nx">c</span><span class="o">=</span><span class="nx">E</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">I</span><span class="p">[</span><span class="nx">d</span><span class="p">]))</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">d</span><span class="p">])}}</span><span class="kd">function</span> <span class="nx">tb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">D</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="nx">D</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">$a</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">l</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">onCellCssStylesChanged</span><span class="p">,{</span><span class="nx">key</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">hash</span><span class="o">:</span><span class="nx">b</span><span class="p">})}</span><span class="kd">function</span> <span class="nx">cc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">ra</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="o">||!</span><span class="nx">ab</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">row</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">cell</span><span class="p">))</span><span class="k">return</span> <span class="kc">false</span><span class="p">;</span><span class="nx">retval</span><span class="o">=</span><span class="nx">l</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">onDragInit</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">isImmediatePropagationStopped</span><span class="p">()</span><span class="o">?</span><span class="nx">retval</span><span class="o">:</span><span class="kc">false</span><span class="p">}</span><span class="kd">function</span> <span class="nx">dc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">ra</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="o">||!</span><span class="nx">ab</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">row</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">cell</span><span class="p">))</span><span class="k">return</span> <span class="kc">false</span><span class="p">;</span></div><div class='line' id='LC53'><span class="nx">c</span><span class="o">=</span><span class="nx">l</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">onDragStart</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">isImmediatePropagationStopped</span><span class="p">()</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="kc">false</span><span class="p">}</span><span class="kd">function</span> <span class="nx">ec</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">l</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">onDrag</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">fc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">l</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">onDragEnd</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">kb</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">l</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">onKeyDown</span><span class="p">,{</span><span class="nx">row</span><span class="o">:</span><span class="nx">m</span><span class="p">,</span><span class="nx">cell</span><span class="o">:</span><span class="nx">u</span><span class="p">},</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">isImmediatePropagationStopped</span><span class="p">())</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">shiftKey</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">altKey</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">ctrlKey</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="o">==</span><span class="mi">27</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">p</span><span class="p">().</span><span class="nx">isActive</span><span class="p">())</span><span class="k">return</span><span class="p">;</span><span class="nx">Fb</span><span class="p">()}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="o">==</span><span class="mi">37</span><span class="p">)</span><span class="nx">Gb</span><span class="p">();</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="o">==</span><span class="mi">39</span><span class="p">)</span><span class="nx">Hb</span><span class="p">();</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="o">==</span><span class="mi">38</span><span class="p">)</span><span class="nx">Ib</span><span class="p">();</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="o">==</span><span class="mi">40</span><span class="p">)</span><span class="nx">Fa</span><span class="p">();</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="o">==</span><span class="mi">9</span><span class="p">)</span><span class="nx">Jb</span><span class="p">();</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="o">==</span><span class="mi">13</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">editable</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="o">?</span><span class="nx">m</span><span class="o">===</span><span class="nx">q</span><span class="p">()</span><span class="o">?</span><span class="nx">Fa</span><span class="p">()</span><span class="o">:</span><span class="nx">Kb</span><span class="p">()</span><span class="o">:</span><span class="nx">p</span><span class="p">().</span><span class="nx">commitCurrentEdit</span><span class="p">()</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC54'><span class="nx">Ga</span><span class="p">());</span><span class="k">else</span> <span class="k">return</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="o">==</span><span class="mi">9</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">shiftKey</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">ctrlKey</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">altKey</span><span class="p">)</span><span class="nx">Lb</span><span class="p">();</span><span class="k">else</span> <span class="k">return</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="k">try</span><span class="p">{</span><span class="nx">a</span><span class="p">.</span><span class="nx">originalEvent</span><span class="p">.</span><span class="nx">keyCode</span><span class="o">=</span><span class="mi">0</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">b</span><span class="p">){}}</span><span class="kd">function</span> <span class="nx">$b</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">k</span><span class="o">||</span><span class="nx">S</span><span class="p">();</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">ra</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="nx">k</span><span class="o">!==</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">row</span><span class="o">&amp;&amp;</span><span class="nx">u</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">cell</span><span class="p">)){</span><span class="nx">l</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">onClick</span><span class="p">,{</span><span class="nx">row</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">row</span><span class="p">,</span><span class="nx">cell</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">cell</span><span class="p">},</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">isImmediatePropagationStopped</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">T</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">row</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">cell</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="nx">p</span><span class="p">().</span><span class="nx">isActive</span><span class="p">()</span><span class="o">||</span><span class="nx">p</span><span class="p">().</span><span class="nx">commitCurrentEdit</span><span class="p">())){</span><span class="nx">sa</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">row</span><span class="p">,</span><span class="kc">false</span><span class="p">);</span><span class="nx">ka</span><span class="p">(</span><span class="nx">E</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">row</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">cell</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">row</span><span class="o">===</span><span class="nx">q</span><span class="p">()</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">autoEdit</span><span class="p">)}}}</span><span class="kd">function</span> <span class="nx">bc</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">).</span><span class="nx">closest</span><span class="p">(</span><span class="s2">&quot;.slick-cell&quot;</span><span class="p">,</span><span class="nx">B</span><span class="p">);</span></div><div class='line' id='LC55'><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">!==</span><span class="mi">0</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="nx">o</span><span class="o">===</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="o">!==</span><span class="kc">null</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">onContextMenu</span><span class="p">,{},</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">ac</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">ra</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="nx">k</span><span class="o">!==</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">row</span><span class="o">&amp;&amp;</span><span class="nx">u</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">cell</span><span class="p">)){</span><span class="nx">l</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">onDblClick</span><span class="p">,{</span><span class="nx">row</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">row</span><span class="p">,</span><span class="nx">cell</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">cell</span><span class="p">},</span><span class="nx">a</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">isImmediatePropagationStopped</span><span class="p">()</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">editable</span><span class="o">&amp;&amp;</span><span class="nx">Mb</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">row</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">cell</span><span class="p">,</span><span class="kc">true</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">Yb</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">).</span><span class="nx">closest</span><span class="p">(</span><span class="s2">&quot;.slick-header-column&quot;</span><span class="p">,</span><span class="s2">&quot;.slick-header-columns&quot;</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">[</span><span class="nx">i</span><span class="p">.</span><span class="nx">getColumnIndex</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;fieldId&quot;</span><span class="p">))];</span><span class="nx">l</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">onHeaderContextMenu</span><span class="p">,{</span><span class="nx">column</span><span class="o">:</span><span class="nx">b</span><span class="p">},</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">Zb</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">).</span><span class="nx">closest</span><span class="p">(</span><span class="s2">&quot;.slick-header-column&quot;</span><span class="p">,</span><span class="s2">&quot;.slick-header-columns&quot;</span><span class="p">);(</span><span class="nx">b</span><span class="o">=</span></div><div class='line' id='LC56'><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">[</span><span class="nx">i</span><span class="p">.</span><span class="nx">getColumnIndex</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;fieldId&quot;</span><span class="p">))])</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">onHeaderClick</span><span class="p">,{</span><span class="nx">column</span><span class="o">:</span><span class="nx">b</span><span class="p">},</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">gc</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">l</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">onMouseEnter</span><span class="p">,{},</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">hc</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">l</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">onMouseLeave</span><span class="p">,{},</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">ab</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="o">!</span><span class="p">(</span><span class="nx">a</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">||</span><span class="nx">a</span><span class="o">&gt;=</span><span class="nx">q</span><span class="p">()</span><span class="o">||</span><span class="nx">b</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">||</span><span class="nx">b</span><span class="o">&gt;=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">bb</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="sr">/l\d+/</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">)</span><span class="k">throw</span><span class="s2">&quot;getCellFromNode: cannot get cell - &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="p">;</span><span class="k">return</span> <span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">substr</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="mi">10</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">ra</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">).</span><span class="nx">closest</span><span class="p">(</span><span class="s2">&quot;.slick-cell&quot;</span><span class="p">,</span><span class="nx">B</span><span class="p">);</span><span class="k">return</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="p">{</span><span class="nx">row</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">().</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;row&quot;</span><span class="p">)</span><span class="o">|</span><span class="mi">0</span><span class="p">,</span><span class="nx">cell</span><span class="o">:</span><span class="nx">bb</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">])}}</span><span class="kd">function</span> <span class="nx">S</span><span class="p">(){</span><span class="nx">Ka</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">focus</span><span class="p">()}</span></div><div class='line' id='LC57'><span class="kd">function</span> <span class="nx">kc</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">o</span><span class="p">).</span><span class="nx">position</span><span class="p">().</span><span class="nx">left</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="nx">e</span><span class="p">(</span><span class="nx">o</span><span class="p">).</span><span class="nx">outerWidth</span><span class="p">(),</span><span class="nx">c</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="p">(),</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="o">+</span><span class="nx">v</span><span class="p">.</span><span class="nx">width</span><span class="p">();</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">c</span><span class="o">?</span><span class="nx">v</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="o">&gt;</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">-</span><span class="nx">v</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">clientWidth</span><span class="p">))}}</span><span class="kd">function</span> <span class="nx">ka</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="o">!==</span><span class="kc">null</span><span class="p">){</span><span class="nx">L</span><span class="p">();</span><span class="nx">e</span><span class="p">(</span><span class="nx">o</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;active&quot;</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">o</span><span class="o">!==</span><span class="nx">a</span><span class="p">;</span><span class="nx">o</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="o">!=</span><span class="kc">null</span><span class="p">){</span><span class="nx">m</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">e</span><span class="p">(</span><span class="nx">o</span><span class="p">).</span><span class="nx">parent</span><span class="p">().</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;row&quot;</span><span class="p">));</span><span class="nx">u</span><span class="o">=</span><span class="nx">cb</span><span class="o">=</span><span class="nx">bb</span><span class="p">(</span><span class="nx">o</span><span class="p">);</span><span class="nx">e</span><span class="p">(</span><span class="nx">o</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;active&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">editable</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">Nb</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">u</span><span class="p">)){</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="nx">db</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">asyncEditorLoading</span><span class="o">?</span><span class="nx">db</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">Ga</span><span class="p">()},</span><span class="nx">d</span><span class="p">.</span><span class="nx">asyncEditorLoadDelay</span><span class="p">)</span><span class="o">:</span><span class="nx">Ga</span><span class="p">()}</span><span class="k">else</span> <span class="nx">S</span><span class="p">()}</span><span class="k">else</span> <span class="nx">m</span><span class="o">=</span><span class="nx">u</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">kc</span><span class="p">();</span><span class="nx">l</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">onActiveCellChanged</span><span class="p">,</span></div><div class='line' id='LC58'><span class="nx">Ob</span><span class="p">())}}</span><span class="kd">function</span> <span class="nx">Nb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">&lt;</span><span class="nx">q</span><span class="p">()</span><span class="o">&amp;&amp;!</span><span class="nx">C</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">cannotTriggerInsert</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">&gt;=</span><span class="nx">q</span><span class="p">()</span><span class="o">||!</span><span class="nx">wb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="kc">false</span><span class="o">:</span><span class="kc">true</span><span class="p">}</span><span class="kd">function</span> <span class="nx">L</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">){</span><span class="nx">l</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">onBeforeCellEditorDestroy</span><span class="p">,{</span><span class="nx">editor</span><span class="o">:</span><span class="nx">k</span><span class="p">});</span><span class="nx">k</span><span class="p">.</span><span class="nx">destroy</span><span class="p">();</span><span class="nx">k</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">C</span><span class="p">(</span><span class="nx">m</span><span class="p">);</span><span class="nx">e</span><span class="p">(</span><span class="nx">o</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;editable invalid&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">u</span><span class="p">],</span><span class="nx">c</span><span class="o">=</span><span class="nx">ya</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">o</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">u</span><span class="p">,</span><span class="nx">za</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">b</span><span class="p">,</span><span class="nx">C</span><span class="p">(</span><span class="nx">m</span><span class="p">));</span><span class="nx">Xa</span><span class="p">(</span><span class="nx">m</span><span class="p">)}}</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">browser</span><span class="p">.</span><span class="nx">msie</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">selection</span><span class="o">&amp;&amp;</span><span class="nb">document</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">empty</span><span class="p">)</span><span class="nb">document</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">empty</span><span class="p">();</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">getSelection</span><span class="p">)(</span><span class="nx">a</span><span class="o">=</span><span class="nb">window</span><span class="p">.</span><span class="nx">getSelection</span><span class="p">())</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeAllRanges</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeAllRanges</span><span class="p">();</span><span class="nx">p</span><span class="p">().</span><span class="nx">deactivate</span><span class="p">(</span><span class="nx">Ha</span><span class="p">)}}</span></div><div class='line' id='LC59'><span class="kd">function</span> <span class="nx">Ga</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">.</span><span class="nx">editable</span><span class="p">)</span><span class="k">throw</span><span class="s2">&quot;Grid : makeActiveCellEditable : should never get called when options.editable is false&quot;</span><span class="p">;</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="nx">db</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">Nb</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">u</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">u</span><span class="p">],</span><span class="nx">c</span><span class="o">=</span><span class="nx">C</span><span class="p">(</span><span class="nx">m</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">onBeforeEditCell</span><span class="p">,{</span><span class="nx">row</span><span class="o">:</span><span class="nx">m</span><span class="p">,</span><span class="nx">cell</span><span class="o">:</span><span class="nx">u</span><span class="p">,</span><span class="nx">item</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">column</span><span class="o">:</span><span class="nx">b</span><span class="p">})</span><span class="o">===</span><span class="kc">false</span><span class="p">)</span><span class="nx">S</span><span class="p">();</span><span class="k">else</span><span class="p">{</span><span class="nx">p</span><span class="p">().</span><span class="nx">activate</span><span class="p">(</span><span class="nx">Ha</span><span class="p">);</span><span class="nx">e</span><span class="p">(</span><span class="nx">o</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;editable&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">)</span><span class="nx">o</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">k</span><span class="o">=</span><span class="k">new</span> <span class="p">(</span><span class="nx">a</span><span class="o">||</span><span class="nx">wb</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">u</span><span class="p">))({</span><span class="nx">grid</span><span class="o">:</span><span class="nx">i</span><span class="p">,</span><span class="nx">gridPosition</span><span class="o">:</span><span class="nx">Ia</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="nx">position</span><span class="o">:</span><span class="nx">Ia</span><span class="p">(</span><span class="nx">o</span><span class="p">),</span><span class="nx">container</span><span class="o">:</span><span class="nx">o</span><span class="p">,</span><span class="nx">column</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">item</span><span class="o">:</span><span class="nx">c</span><span class="o">||</span><span class="p">{},</span><span class="nx">commitChanges</span><span class="o">:</span><span class="nx">Kb</span><span class="p">,</span><span class="nx">cancelChanges</span><span class="o">:</span><span class="nx">Fb</span><span class="p">});</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">.</span><span class="nx">loadValue</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">Pb</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">serializeValue</span><span class="p">();</span><span class="nx">k</span><span class="p">.</span><span class="nx">position</span><span class="o">&amp;&amp;</span><span class="nx">mb</span><span class="p">()}}}}</span></div><div class='line' id='LC60'><span class="kd">function</span> <span class="nx">Kb</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">().</span><span class="nx">commitCurrentEdit</span><span class="p">()){</span><span class="nx">S</span><span class="p">();</span><span class="nx">d</span><span class="p">.</span><span class="nx">autoEdit</span><span class="o">&amp;&amp;</span><span class="nx">Fa</span><span class="p">()}}</span><span class="kd">function</span> <span class="nx">Fb</span><span class="p">(){</span><span class="nx">p</span><span class="p">().</span><span class="nx">cancelCurrentEdit</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">S</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">Ia</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">{</span><span class="nx">top</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetTop</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetLeft</span><span class="p">,</span><span class="nx">bottom</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">right</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">outerWidth</span><span class="p">(),</span><span class="nx">height</span><span class="o">:</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">outerHeight</span><span class="p">(),</span><span class="nx">visible</span><span class="o">:</span><span class="kc">true</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">bottom</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">top</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">right</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetParent</span><span class="p">;(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">)</span><span class="o">!=</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">;){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">visible</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">scrollHeight</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;overflowY&quot;</span><span class="p">)</span><span class="o">!=</span><span class="s2">&quot;visible&quot;</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">visible</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">bottom</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">scrollTop</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">top</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">scrollTop</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">clientHeight</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">visible</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC61'><span class="nx">a</span><span class="p">.</span><span class="nx">scrollWidth</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;overflowX&quot;</span><span class="p">)</span><span class="o">!=</span><span class="s2">&quot;visible&quot;</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">visible</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">right</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">clientWidth</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">top</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">===</span><span class="nx">c</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetLeft</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">top</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetTop</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetParent</span><span class="p">}</span><span class="nx">b</span><span class="p">.</span><span class="nx">bottom</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">top</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">right</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="p">}</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Qb</span><span class="p">(){</span><span class="k">return</span> <span class="nx">Ia</span><span class="p">(</span><span class="nx">o</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">mb</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">){</span><span class="nx">l</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">onActiveCellPositionChanged</span><span class="p">,{});</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">Qb</span><span class="p">();</span><span class="nx">k</span><span class="p">.</span><span class="nx">show</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">.</span><span class="nx">hide</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">visible</span><span class="o">?</span><span class="nx">k</span><span class="p">.</span><span class="nx">show</span><span class="p">()</span><span class="o">:</span><span class="nx">k</span><span class="p">.</span><span class="nx">hide</span><span class="p">());</span><span class="nx">k</span><span class="p">.</span><span class="nx">position</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">.</span><span class="nx">position</span><span class="p">(</span><span class="nx">a</span><span class="p">)}}}</span><span class="kd">function</span> <span class="nx">Ob</span><span class="p">(){</span><span class="k">return</span> <span class="nx">o</span><span class="o">?</span></div><div class='line' id='LC62'><span class="p">{</span><span class="nx">row</span><span class="o">:</span><span class="nx">m</span><span class="p">,</span><span class="nx">cell</span><span class="o">:</span><span class="nx">u</span><span class="p">}</span><span class="o">:</span><span class="kc">null</span><span class="p">}</span><span class="kd">function</span> <span class="nx">sa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="o">*</span><span class="nx">d</span><span class="p">.</span><span class="nx">rowHeight</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nx">d</span><span class="p">.</span><span class="nx">rowHeight</span><span class="o">-</span><span class="nx">s</span><span class="o">+</span><span class="p">(</span><span class="nx">lb</span><span class="o">?</span><span class="nx">G</span><span class="p">.</span><span class="nx">height</span><span class="o">:</span><span class="mi">0</span><span class="p">);</span><span class="k">if</span><span class="p">((</span><span class="nx">a</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nx">d</span><span class="p">.</span><span class="nx">rowHeight</span><span class="o">&gt;</span><span class="nx">y</span><span class="o">+</span><span class="nx">s</span><span class="o">+</span><span class="nx">w</span><span class="p">){</span><span class="nx">ea</span><span class="p">(</span><span class="nx">b</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="nx">e</span><span class="p">);</span><span class="nx">J</span><span class="p">()}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">*</span><span class="nx">d</span><span class="p">.</span><span class="nx">rowHeight</span><span class="o">&lt;</span><span class="nx">y</span><span class="o">+</span><span class="nx">w</span><span class="p">){</span><span class="nx">ea</span><span class="p">(</span><span class="nx">b</span><span class="o">?</span><span class="nx">e</span><span class="o">:</span><span class="nx">c</span><span class="p">);</span><span class="nx">J</span><span class="p">()}}</span><span class="kd">function</span> <span class="nx">$</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">getItemMetadata</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">getItemMetadata</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="o">||!</span><span class="nx">c</span><span class="p">.</span><span class="nx">columns</span><span class="p">)</span><span class="k">return</span> <span class="mi">1</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">columns</span><span class="p">[</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">id</span><span class="p">]</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">columns</span><span class="p">[</span><span class="nx">b</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">colspan</span><span class="p">;</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;*&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="o">||</span><span class="mi">1</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Rb</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;){</span><span class="k">if</span><span class="p">(</span><span class="nx">T</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span> <span class="nx">b</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="nx">$</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="k">return</span> <span class="kc">null</span><span class="p">}</span><span class="kd">function</span> <span class="nx">eb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&gt;=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="k">do</span> <span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="nx">$</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">while</span><span class="p">(</span><span class="nx">b</span><span class="o">&lt;</span></div><div class='line' id='LC63'><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;!</span><span class="nx">T</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">));</span><span class="k">return</span> <span class="nx">b</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="p">{</span><span class="nx">row</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">cell</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">posX</span><span class="o">:</span><span class="nx">b</span><span class="p">}</span><span class="o">:</span><span class="kc">null</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Sb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&lt;=</span><span class="mi">0</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">Rb</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">===</span><span class="kc">null</span><span class="o">||</span><span class="nx">c</span><span class="o">&gt;=</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{</span><span class="nx">row</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">cell</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">posX</span><span class="o">:</span><span class="nx">c</span><span class="p">},</span><span class="nx">d</span><span class="p">;;){</span><span class="nx">d</span><span class="o">=</span><span class="nx">eb</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">row</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">cell</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">posX</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">cell</span><span class="o">&gt;=</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">lc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="p">;;){</span><span class="k">if</span><span class="p">(</span><span class="o">++</span><span class="nx">a</span><span class="o">&gt;=</span><span class="nx">q</span><span class="p">()</span><span class="o">+</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">enableAddRow</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">))</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;=</span><span class="nx">c</span><span class="p">;){</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="nx">$</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">T</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">))</span><span class="k">return</span><span class="p">{</span><span class="nx">row</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">cell</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">posX</span><span class="o">:</span><span class="nx">c</span><span class="p">}}}</span><span class="kd">function</span> <span class="nx">mc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="p">;;){</span><span class="k">if</span><span class="p">(</span><span class="o">--</span><span class="nx">a</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;=</span><span class="nx">c</span><span class="p">;){</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="nx">$</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">T</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">))</span><span class="k">return</span><span class="p">{</span><span class="nx">row</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC64'><span class="nx">cell</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">posX</span><span class="o">:</span><span class="nx">c</span><span class="p">}}}</span><span class="kd">function</span> <span class="nx">nc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">eb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">))</span><span class="k">return</span> <span class="nx">b</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="o">++</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">q</span><span class="p">()</span><span class="o">+</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">enableAddRow</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">);){</span><span class="nx">b</span><span class="o">=</span><span class="nx">Rb</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">!==</span><span class="kc">null</span><span class="p">)</span><span class="k">return</span><span class="p">{</span><span class="nx">row</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">cell</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">posX</span><span class="o">:</span><span class="nx">b</span><span class="p">}}</span><span class="k">return</span> <span class="kc">null</span><span class="p">}</span><span class="kd">function</span> <span class="nx">oc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="o">!</span><span class="nx">d</span><span class="p">;){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">Sb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">))</span><span class="k">break</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">--</span><span class="nx">a</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;){</span><span class="nx">T</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="p">);</span><span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="o">+</span><span class="nx">$</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">)}</span><span class="nx">e</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="nx">e</span><span class="o">!==</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="p">{</span><span class="nx">row</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">cell</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">posX</span><span class="o">:</span><span class="nx">e</span><span class="p">})}</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Hb</span><span class="p">(){</span><span class="nx">la</span><span class="p">(</span><span class="s2">&quot;right&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">Gb</span><span class="p">(){</span><span class="nx">la</span><span class="p">(</span><span class="s2">&quot;left&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">Fa</span><span class="p">(){</span><span class="nx">la</span><span class="p">(</span><span class="s2">&quot;down&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">Ib</span><span class="p">(){</span><span class="nx">la</span><span class="p">(</span><span class="s2">&quot;up&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">Jb</span><span class="p">(){</span><span class="nx">la</span><span class="p">(</span><span class="s2">&quot;next&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">Lb</span><span class="p">(){</span><span class="nx">la</span><span class="p">(</span><span class="s2">&quot;prev&quot;</span><span class="p">)}</span></div><div class='line' id='LC65'><span class="kd">function</span> <span class="nx">la</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">enableCellNavigation</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">().</span><span class="nx">commitCurrentEdit</span><span class="p">()){</span><span class="nx">S</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,{</span><span class="nx">up</span><span class="o">:</span><span class="nx">mc</span><span class="p">,</span><span class="nx">down</span><span class="o">:</span><span class="nx">lc</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="nx">Sb</span><span class="p">,</span><span class="nx">right</span><span class="o">:</span><span class="nx">eb</span><span class="p">,</span><span class="nx">prev</span><span class="o">:</span><span class="nx">oc</span><span class="p">,</span><span class="nx">next</span><span class="o">:</span><span class="nx">nc</span><span class="p">}[</span><span class="nx">a</span><span class="p">])(</span><span class="nx">m</span><span class="p">,</span><span class="nx">u</span><span class="p">,</span><span class="nx">cb</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">row</span><span class="o">==</span><span class="nx">q</span><span class="p">();</span><span class="nx">sa</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">row</span><span class="p">,</span><span class="o">!</span><span class="nx">b</span><span class="p">);</span><span class="nx">ka</span><span class="p">(</span><span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">row</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">cell</span><span class="p">),</span><span class="nx">b</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">autoEdit</span><span class="p">);</span><span class="nx">cb</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">posX</span><span class="p">}</span><span class="k">else</span> <span class="nx">ka</span><span class="p">(</span><span class="nx">E</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">u</span><span class="p">),</span><span class="nx">m</span><span class="o">==</span><span class="nx">q</span><span class="p">()</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">autoEdit</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">[</span><span class="nx">a</span><span class="p">])</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">x</span><span class="p">[</span><span class="nx">a</span><span class="p">]).</span><span class="nx">children</span><span class="p">(),</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">bb</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">===</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">)</span><span class="k">break</span><span class="p">}</span><span class="k">return</span> <span class="kc">null</span><span class="p">}</span><span class="kd">function</span> <span class="nx">T</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">.</span><span class="nx">enableCellNavigation</span><span class="o">||</span><span class="nx">a</span><span class="o">&gt;=</span><span class="nx">q</span><span class="p">()</span><span class="o">+</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">enableAddRow</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">)</span><span class="o">||</span><span class="nx">a</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">||</span><span class="nx">b</span><span class="o">&gt;=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="nx">b</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">)</span><span class="k">return</span> <span class="kc">false</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">getItemMetadata</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC66'><span class="nx">g</span><span class="p">.</span><span class="nx">getItemMetadata</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">c</span><span class="p">.</span><span class="nx">focusable</span><span class="o">===</span><span class="s2">&quot;boolean&quot;</span><span class="p">)</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">focusable</span><span class="p">;</span><span class="k">return</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">columns</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">id</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">id</span><span class="p">].</span><span class="nx">focusable</span><span class="o">===</span><span class="s2">&quot;boolean&quot;</span><span class="o">?</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">id</span><span class="p">].</span><span class="nx">focusable</span><span class="o">:</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">focusable</span><span class="o">===</span><span class="s2">&quot;boolean&quot;</span><span class="o">?</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">focusable</span><span class="o">:</span><span class="k">typeof</span> <span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">focusable</span><span class="o">===</span><span class="s2">&quot;boolean&quot;</span><span class="o">?</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">focusable</span><span class="o">:</span><span class="kc">true</span><span class="p">}</span><span class="kd">function</span> <span class="nx">sb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&gt;=</span><span class="nx">q</span><span class="p">()</span><span class="o">||</span><span class="nx">a</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">||</span><span class="nx">b</span><span class="o">&gt;=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="nx">b</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">)</span><span class="k">return</span> <span class="kc">false</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">getItemMetadata</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">getItemMetadata</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">c</span><span class="p">.</span><span class="nx">selectable</span><span class="o">===</span><span class="s2">&quot;boolean&quot;</span><span class="p">)</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">selectable</span><span class="p">;</span><span class="k">return</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">columns</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">columns</span><span class="p">[</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">id</span><span class="p">]</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">columns</span><span class="p">[</span><span class="nx">b</span><span class="p">]))</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC67'><span class="k">typeof</span> <span class="nx">c</span><span class="p">.</span><span class="nx">selectable</span><span class="o">===</span><span class="s2">&quot;boolean&quot;</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">selectable</span><span class="o">:</span><span class="k">typeof</span> <span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">selectable</span><span class="o">===</span><span class="s2">&quot;boolean&quot;</span><span class="o">?</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">selectable</span><span class="o">:</span><span class="kc">true</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Mb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="o">&amp;&amp;</span><span class="nx">T</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">().</span><span class="nx">commitCurrentEdit</span><span class="p">()){</span><span class="nx">sa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kc">false</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">ka</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">||</span><span class="nx">a</span><span class="o">===</span><span class="nx">q</span><span class="p">()</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">autoEdit</span><span class="p">);</span><span class="nx">k</span><span class="o">||</span><span class="nx">S</span><span class="p">()}}</span><span class="kd">function</span> <span class="nx">pc</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">new</span> <span class="nx">Slick</span><span class="p">.</span><span class="nx">Range</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">c</span><span class="p">));</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">ub</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">F</span><span class="p">)</span><span class="k">throw</span><span class="s2">&quot;Selection model is not set&quot;</span><span class="p">;</span><span class="k">return</span> <span class="nx">Ta</span><span class="p">}</span><span class="kd">var</span> <span class="nx">qc</span><span class="o">=</span><span class="p">{</span><span class="nx">explicitInitialization</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">rowHeight</span><span class="o">:</span><span class="mi">25</span><span class="p">,</span><span class="nx">defaultColumnWidth</span><span class="o">:</span><span class="mi">80</span><span class="p">,</span><span class="nx">enableAddRow</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">leaveSpaceForNewRows</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span></div><div class='line' id='LC68'><span class="nx">editable</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">autoEdit</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">enableCellNavigation</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">enableColumnReorder</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">asyncEditorLoading</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">asyncEditorLoadDelay</span><span class="o">:</span><span class="mi">100</span><span class="p">,</span><span class="nx">forceFitColumns</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">enableAsyncPostRender</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">asyncPostRenderDelay</span><span class="o">:</span><span class="mi">60</span><span class="p">,</span><span class="nx">autoHeight</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">editorLock</span><span class="o">:</span><span class="nx">Slick</span><span class="p">.</span><span class="nx">GlobalEditorLock</span><span class="p">,</span><span class="nx">showHeaderRow</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">headerRowHeight</span><span class="o">:</span><span class="mi">25</span><span class="p">,</span><span class="nx">showTopPanel</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">topPanelHeight</span><span class="o">:</span><span class="mi">25</span><span class="p">,</span><span class="nx">formatterFactory</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">editorFactory</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">cellFlashingCssClass</span><span class="o">:</span><span class="s2">&quot;flashing&quot;</span><span class="p">,</span><span class="nx">selectedCellCssClass</span><span class="o">:</span><span class="s2">&quot;selected&quot;</span><span class="p">,</span><span class="nx">multiSelect</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">enableTextSelectionOnCells</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">dataItemColumnValueExtractor</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span></div><div class='line' id='LC69'><span class="nx">fullWidthRows</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">multiColumnSort</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">defaultFormatter</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="o">==</span><span class="kc">null</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">toString</span><span class="p">().</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/&amp;/g</span><span class="p">,</span><span class="s2">&quot;&amp;amp;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/&lt;/g</span><span class="p">,</span><span class="s2">&quot;&amp;lt;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/&gt;/g</span><span class="p">,</span><span class="s2">&quot;&amp;gt;&quot;</span><span class="p">)}},</span><span class="nx">La</span><span class="o">=</span><span class="p">{</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">resizable</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">sortable</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">minWidth</span><span class="o">:</span><span class="mi">30</span><span class="p">,</span><span class="nx">rerenderOnResize</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">headerCssClass</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="nx">N</span><span class="p">,</span><span class="nx">M</span><span class="p">,</span><span class="nx">ha</span><span class="p">,</span><span class="nx">ga</span><span class="p">,</span><span class="nx">wa</span><span class="p">,</span><span class="nx">fa</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">w</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">Z</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">H</span><span class="o">=</span><span class="kc">false</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">z</span><span class="o">=</span><span class="s2">&quot;slickgrid_&quot;</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="mi">1</span><span class="nx">E6</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()),</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">Ka</span><span class="p">,</span><span class="nx">ca</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">da</span><span class="p">,</span><span class="nx">Q</span><span class="p">,</span><span class="nx">aa</span><span class="p">,</span><span class="nx">Tb</span><span class="p">,</span><span class="nx">v</span><span class="p">,</span><span class="nx">B</span><span class="p">,</span><span class="nx">X</span><span class="p">,</span><span class="nx">Y</span><span class="p">,</span><span class="nx">Ra</span><span class="p">,</span><span class="nx">Sa</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">U</span><span class="p">,</span><span class="nx">P</span><span class="p">,</span><span class="nx">lb</span><span class="p">,</span><span class="nx">na</span><span class="p">,</span><span class="nx">V</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">Pa</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">ua</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">va</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">R</span><span class="p">,</span><span class="nx">Ya</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">cb</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">u</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">Pb</span><span class="p">,</span><span class="nx">Ha</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="p">{},</span><span class="nx">Va</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">Ca</span><span class="p">,</span><span class="nx">ia</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">y</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">Ua</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">Eb</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">Ta</span><span class="o">=</span><span class="p">[],</span><span class="nx">O</span><span class="o">=</span><span class="p">[],</span></div><div class='line' id='LC70'><span class="nx">D</span><span class="o">=</span><span class="p">{},</span><span class="nx">I</span><span class="o">=</span><span class="p">{},</span><span class="nx">r</span><span class="o">=</span><span class="p">[],</span><span class="nx">db</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">Ea</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">Za</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">Ba</span><span class="o">=</span><span class="p">{},</span><span class="nx">qa</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">ja</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">Db</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">xb</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">debug</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;\ncounter_rows_rendered:  &quot;</span><span class="o">+</span><span class="nx">Db</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot;\ncounter_rows_removed:  &quot;</span><span class="o">+</span><span class="nx">xb</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot;\nrenderedRows:  &quot;</span><span class="o">+</span><span class="nx">Va</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot;\nnumVisibleRows:  &quot;</span><span class="o">+</span><span class="nx">Ca</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot;\nmaxSupportedCssHeight:  &quot;</span><span class="o">+</span><span class="nx">A</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot;\nn(umber of pages):  &quot;</span><span class="o">+</span><span class="nx">ga</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot;\n(current) page:  &quot;</span><span class="o">+</span><span class="nx">fa</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot;\npage height (ph):  &quot;</span><span class="o">+</span><span class="nx">ha</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot;\nscrollDir:  &quot;</span><span class="o">+</span><span class="nx">Z</span><span class="p">);</span><span class="nx">alert</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span><span class="k">this</span><span class="p">.</span><span class="nb">eval</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nb">eval</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span><span class="nx">e</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="k">this</span><span class="p">,{</span><span class="nx">slickGridVersion</span><span class="o">:</span><span class="s2">&quot;2.0&quot;</span><span class="p">,</span><span class="nx">onScroll</span><span class="o">:</span><span class="k">new</span> <span class="nx">Slick</span><span class="p">.</span><span class="nx">Event</span><span class="p">,</span></div><div class='line' id='LC71'><span class="nx">onSort</span><span class="o">:</span><span class="k">new</span> <span class="nx">Slick</span><span class="p">.</span><span class="nx">Event</span><span class="p">,</span><span class="nx">onHeaderContextMenu</span><span class="o">:</span><span class="k">new</span> <span class="nx">Slick</span><span class="p">.</span><span class="nx">Event</span><span class="p">,</span><span class="nx">onHeaderClick</span><span class="o">:</span><span class="k">new</span> <span class="nx">Slick</span><span class="p">.</span><span class="nx">Event</span><span class="p">,</span><span class="nx">onMouseEnter</span><span class="o">:</span><span class="k">new</span> <span class="nx">Slick</span><span class="p">.</span><span class="nx">Event</span><span class="p">,</span><span class="nx">onMouseLeave</span><span class="o">:</span><span class="k">new</span> <span class="nx">Slick</span><span class="p">.</span><span class="nx">Event</span><span class="p">,</span><span class="nx">onClick</span><span class="o">:</span><span class="k">new</span> <span class="nx">Slick</span><span class="p">.</span><span class="nx">Event</span><span class="p">,</span><span class="nx">onDblClick</span><span class="o">:</span><span class="k">new</span> <span class="nx">Slick</span><span class="p">.</span><span class="nx">Event</span><span class="p">,</span><span class="nx">onContextMenu</span><span class="o">:</span><span class="k">new</span> <span class="nx">Slick</span><span class="p">.</span><span class="nx">Event</span><span class="p">,</span><span class="nx">onKeyDown</span><span class="o">:</span><span class="k">new</span> <span class="nx">Slick</span><span class="p">.</span><span class="nx">Event</span><span class="p">,</span><span class="nx">onAddNewRow</span><span class="o">:</span><span class="k">new</span> <span class="nx">Slick</span><span class="p">.</span><span class="nx">Event</span><span class="p">,</span><span class="nx">onValidationError</span><span class="o">:</span><span class="k">new</span> <span class="nx">Slick</span><span class="p">.</span><span class="nx">Event</span><span class="p">,</span><span class="nx">onViewportChanged</span><span class="o">:</span><span class="k">new</span> <span class="nx">Slick</span><span class="p">.</span><span class="nx">Event</span><span class="p">,</span><span class="nx">onColumnsReordered</span><span class="o">:</span><span class="k">new</span> <span class="nx">Slick</span><span class="p">.</span><span class="nx">Event</span><span class="p">,</span><span class="nx">onColumnsResized</span><span class="o">:</span><span class="k">new</span> <span class="nx">Slick</span><span class="p">.</span><span class="nx">Event</span><span class="p">,</span><span class="nx">onCellChange</span><span class="o">:</span><span class="k">new</span> <span class="nx">Slick</span><span class="p">.</span><span class="nx">Event</span><span class="p">,</span><span class="nx">onBeforeEditCell</span><span class="o">:</span><span class="k">new</span> <span class="nx">Slick</span><span class="p">.</span><span class="nx">Event</span><span class="p">,</span><span class="nx">onBeforeCellEditorDestroy</span><span class="o">:</span><span class="k">new</span> <span class="nx">Slick</span><span class="p">.</span><span class="nx">Event</span><span class="p">,</span></div><div class='line' id='LC72'><span class="nx">onBeforeDestroy</span><span class="o">:</span><span class="k">new</span> <span class="nx">Slick</span><span class="p">.</span><span class="nx">Event</span><span class="p">,</span><span class="nx">onActiveCellChanged</span><span class="o">:</span><span class="k">new</span> <span class="nx">Slick</span><span class="p">.</span><span class="nx">Event</span><span class="p">,</span><span class="nx">onActiveCellPositionChanged</span><span class="o">:</span><span class="k">new</span> <span class="nx">Slick</span><span class="p">.</span><span class="nx">Event</span><span class="p">,</span><span class="nx">onDragInit</span><span class="o">:</span><span class="k">new</span> <span class="nx">Slick</span><span class="p">.</span><span class="nx">Event</span><span class="p">,</span><span class="nx">onDragStart</span><span class="o">:</span><span class="k">new</span> <span class="nx">Slick</span><span class="p">.</span><span class="nx">Event</span><span class="p">,</span><span class="nx">onDrag</span><span class="o">:</span><span class="k">new</span> <span class="nx">Slick</span><span class="p">.</span><span class="nx">Event</span><span class="p">,</span><span class="nx">onDragEnd</span><span class="o">:</span><span class="k">new</span> <span class="nx">Slick</span><span class="p">.</span><span class="nx">Event</span><span class="p">,</span><span class="nx">onSelectedRowsChanged</span><span class="o">:</span><span class="k">new</span> <span class="nx">Slick</span><span class="p">.</span><span class="nx">Event</span><span class="p">,</span><span class="nx">onCellCssStylesChanged</span><span class="o">:</span><span class="k">new</span> <span class="nx">Slick</span><span class="p">.</span><span class="nx">Event</span><span class="p">,</span><span class="nx">registerPlugin</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">O</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span><span class="nx">i</span><span class="p">)},</span><span class="nx">unregisterPlugin</span><span class="o">:</span><span class="nx">gb</span><span class="p">,</span><span class="nx">getColumns</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">f</span><span class="p">},</span><span class="nx">setColumns</span><span class="o">:</span><span class="nx">ob</span><span class="p">,</span><span class="nx">getColumnIndex</span><span class="o">:</span><span class="nx">Na</span><span class="p">,</span><span class="nx">updateColumnHeader</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">I</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">children</span><span class="p">().</span><span class="nx">eq</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span></div><div class='line' id='LC73'><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">name</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">toolTip</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;title&quot;</span><span class="p">,</span><span class="nx">c</span><span class="o">||</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">children</span><span class="p">().</span><span class="nx">eq</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="nx">b</span><span class="p">)}}},</span><span class="nx">setSortColumn</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">ta</span><span class="p">([{</span><span class="nx">columnId</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">sortAsc</span><span class="o">:</span><span class="nx">b</span><span class="p">}])},</span><span class="nx">setSortColumns</span><span class="o">:</span><span class="nx">ta</span><span class="p">,</span><span class="nx">getSortColumns</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">r</span><span class="p">},</span><span class="nx">autosizeColumns</span><span class="o">:</span><span class="nx">Qa</span><span class="p">,</span><span class="nx">getOptions</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">d</span><span class="p">},</span><span class="nx">setOptions</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">().</span><span class="nx">commitCurrentEdit</span><span class="p">()){</span><span class="nx">L</span><span class="p">();</span><span class="nx">d</span><span class="p">.</span><span class="nx">enableAddRow</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">enableAddRow</span><span class="o">&amp;&amp;</span><span class="nx">zb</span><span class="p">(</span><span class="nx">q</span><span class="p">());</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">v</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;overflow-y&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">autoHeight</span><span class="o">?</span><span class="s2">&quot;hidden&quot;</span><span class="o">:</span><span class="s2">&quot;auto&quot;</span><span class="p">);</span><span class="nx">J</span><span class="p">()}},</span><span class="nx">getData</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">g</span><span class="p">},</span><span class="nx">getDataLength</span><span class="o">:</span><span class="nx">q</span><span class="p">,</span><span class="nx">getDataItem</span><span class="o">:</span><span class="nx">C</span><span class="p">,</span><span class="nx">setData</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span></div><div class='line' id='LC74'><span class="nx">W</span><span class="p">();</span><span class="nx">Da</span><span class="p">();</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">ea</span><span class="p">(</span><span class="mi">0</span><span class="p">)},</span><span class="nx">getSelectionModel</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">F</span><span class="p">},</span><span class="nx">setSelectionModel</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="p">){</span><span class="nx">F</span><span class="p">.</span><span class="nx">onSelectedRangesChanged</span><span class="p">.</span><span class="nx">unsubscribe</span><span class="p">(</span><span class="nx">rb</span><span class="p">);</span><span class="nx">F</span><span class="p">.</span><span class="nx">destroy</span><span class="o">&amp;&amp;</span><span class="nx">F</span><span class="p">.</span><span class="nx">destroy</span><span class="p">()}</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="o">=</span><span class="nx">a</span><span class="p">){</span><span class="nx">F</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="nx">F</span><span class="p">.</span><span class="nx">onSelectedRangesChanged</span><span class="p">.</span><span class="nx">subscribe</span><span class="p">(</span><span class="nx">rb</span><span class="p">)}},</span><span class="nx">getSelectedRows</span><span class="o">:</span><span class="nx">ub</span><span class="p">,</span><span class="nx">setSelectedRows</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">F</span><span class="p">)</span><span class="k">throw</span><span class="s2">&quot;Selection model is not set&quot;</span><span class="p">;</span><span class="nx">F</span><span class="p">.</span><span class="nx">setSelectedRanges</span><span class="p">(</span><span class="nx">pc</span><span class="p">(</span><span class="nx">a</span><span class="p">))},</span><span class="nx">render</span><span class="o">:</span><span class="nx">J</span><span class="p">,</span><span class="nx">invalidate</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">Da</span><span class="p">();</span><span class="nx">W</span><span class="p">();</span><span class="nx">J</span><span class="p">()},</span><span class="nx">invalidateRow</span><span class="o">:</span><span class="nx">zb</span><span class="p">,</span><span class="nx">invalidateRows</span><span class="o">:</span><span class="nx">yb</span><span class="p">,</span><span class="nx">invalidateAllRows</span><span class="o">:</span><span class="nx">W</span><span class="p">,</span><span class="nx">updateCell</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">C</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC75'><span class="nx">m</span><span class="o">===</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">u</span><span class="o">===</span><span class="nx">b</span><span class="p">)</span><span class="nx">k</span><span class="p">.</span><span class="nx">loadValue</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="nx">c</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">e</span><span class="o">?</span><span class="nx">ya</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">)(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">za</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">Xa</span><span class="p">(</span><span class="nx">a</span><span class="p">)}}},</span><span class="nx">updateRow</span><span class="o">:</span><span class="nx">Wa</span><span class="p">,</span><span class="nx">getViewport</span><span class="o">:</span><span class="nx">xa</span><span class="p">,</span><span class="nx">getRenderedRange</span><span class="o">:</span><span class="nx">Ab</span><span class="p">,</span><span class="nx">resizeCanvas</span><span class="o">:</span><span class="nx">K</span><span class="p">,</span><span class="nx">updateRowCount</span><span class="o">:</span><span class="nx">Da</span><span class="p">,</span><span class="nx">scrollRowIntoView</span><span class="o">:</span><span class="nx">sa</span><span class="p">,</span><span class="nx">getCanvasNode</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">B</span><span class="p">[</span><span class="mi">0</span><span class="p">]},</span><span class="nx">focus</span><span class="o">:</span><span class="nx">S</span><span class="p">,</span><span class="nx">getCellFromPoint</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">((</span><span class="nx">b</span><span class="o">+</span><span class="nx">w</span><span class="p">)</span><span class="o">/</span><span class="nx">d</span><span class="p">.</span><span class="nx">rowHeight</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="o">+</span><span class="nx">f</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">width</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">}</span><span class="nx">e</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span><span class="p">{</span><span class="nx">row</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">cell</span><span class="o">:</span><span class="nx">e</span><span class="o">-</span><span class="mi">1</span><span class="p">}},</span><span class="nx">getCellFromEvent</span><span class="o">:</span><span class="nx">ra</span><span class="p">,</span><span class="nx">getActiveCell</span><span class="o">:</span><span class="nx">Ob</span><span class="p">,</span><span class="nx">setActiveCell</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="nx">a</span><span class="o">&gt;</span><span class="nx">q</span><span class="p">()</span><span class="o">||</span><span class="nx">a</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">||</span><span class="nx">b</span><span class="o">&gt;=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="nx">b</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">enableCellNavigation</span><span class="p">){</span><span class="nx">sa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC76'><span class="kc">false</span><span class="p">);</span><span class="nx">ka</span><span class="p">(</span><span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="kc">false</span><span class="p">)}},</span><span class="nx">getActiveCellNode</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">o</span><span class="p">},</span><span class="nx">getActiveCellPosition</span><span class="o">:</span><span class="nx">Qb</span><span class="p">,</span><span class="nx">resetActiveCell</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">ka</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="kc">false</span><span class="p">)},</span><span class="nx">editActiveCell</span><span class="o">:</span><span class="nx">Ga</span><span class="p">,</span><span class="nx">getCellEditor</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">k</span><span class="p">},</span><span class="nx">getCellNode</span><span class="o">:</span><span class="nx">E</span><span class="p">,</span><span class="nx">getCellNodeBox</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">ab</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="o">*</span><span class="nx">d</span><span class="p">.</span><span class="nx">rowHeight</span><span class="o">-</span><span class="nx">w</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">rowHeight</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="o">+</span><span class="nx">f</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">width</span><span class="p">;</span><span class="k">return</span><span class="p">{</span><span class="nx">top</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="nx">g</span><span class="p">,</span><span class="nx">bottom</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">right</span><span class="o">:</span><span class="nx">g</span><span class="o">+</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">width</span><span class="p">}},</span><span class="nx">canCellBeSelected</span><span class="o">:</span><span class="nx">sb</span><span class="p">,</span><span class="nx">canCellBeActive</span><span class="o">:</span><span class="nx">T</span><span class="p">,</span><span class="nx">navigatePrev</span><span class="o">:</span><span class="nx">Lb</span><span class="p">,</span><span class="nx">navigateNext</span><span class="o">:</span><span class="nx">Jb</span><span class="p">,</span><span class="nx">navigateUp</span><span class="o">:</span><span class="nx">Ib</span><span class="p">,</span><span class="nx">navigateDown</span><span class="o">:</span><span class="nx">Fa</span><span class="p">,</span><span class="nx">navigateLeft</span><span class="o">:</span><span class="nx">Gb</span><span class="p">,</span><span class="nx">navigateRight</span><span class="o">:</span><span class="nx">Hb</span><span class="p">,</span></div><div class='line' id='LC77'><span class="nx">gotoCell</span><span class="o">:</span><span class="nx">Mb</span><span class="p">,</span><span class="nx">getTopPanel</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">Tb</span><span class="p">[</span><span class="mi">0</span><span class="p">]},</span><span class="nx">showTopPanel</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">showTopPanel</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">aa</span><span class="p">.</span><span class="nx">slideDown</span><span class="p">(</span><span class="s2">&quot;fast&quot;</span><span class="p">,</span><span class="nx">K</span><span class="p">)},</span><span class="nx">hideTopPanel</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">showTopPanel</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">aa</span><span class="p">.</span><span class="nx">slideUp</span><span class="p">(</span><span class="s2">&quot;fast&quot;</span><span class="p">,</span><span class="nx">K</span><span class="p">)},</span><span class="nx">showHeaderRowColumns</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">showHeaderRow</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">Q</span><span class="p">.</span><span class="nx">slideDown</span><span class="p">(</span><span class="s2">&quot;fast&quot;</span><span class="p">,</span><span class="nx">K</span><span class="p">)},</span><span class="nx">hideHeaderRowColumns</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">showHeaderRow</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">Q</span><span class="p">.</span><span class="nx">slideUp</span><span class="p">(</span><span class="s2">&quot;fast&quot;</span><span class="p">,</span><span class="nx">K</span><span class="p">)},</span><span class="nx">getHeaderRow</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">da</span><span class="p">[</span><span class="mi">0</span><span class="p">]},</span><span class="nx">getHeaderRowColumn</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">I</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">return</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">da</span><span class="p">.</span><span class="nx">children</span><span class="p">().</span><span class="nx">eq</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]},</span><span class="nx">getGridPosition</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">Ia</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="mi">0</span><span class="p">])},</span><span class="nx">flashCell</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC78'><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="mi">100</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">[</span><span class="nx">a</span><span class="p">]){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)),</span><span class="nx">g</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">f</span><span class="p">.</span><span class="nx">queue</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">f</span><span class="p">.</span><span class="nx">toggleClass</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">cellFlashingCssClass</span><span class="p">).</span><span class="nx">dequeue</span><span class="p">();</span><span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="mi">1</span><span class="p">)})},</span><span class="nx">c</span><span class="p">)};</span><span class="nx">g</span><span class="p">(</span><span class="mi">4</span><span class="p">)}},</span><span class="nx">addCellCssStyles</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">D</span><span class="p">[</span><span class="nx">a</span><span class="p">])</span><span class="k">throw</span><span class="s2">&quot;addCellCssStyles: cell CSS hash with key &#39;&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;&#39; already exists.&quot;</span><span class="p">;</span><span class="nx">D</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">$a</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kc">null</span><span class="p">);</span><span class="nx">l</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">onCellCssStylesChanged</span><span class="p">,{</span><span class="nx">key</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">hash</span><span class="o">:</span><span class="nx">b</span><span class="p">})},</span><span class="nx">setCellCssStyles</span><span class="o">:</span><span class="nx">tb</span><span class="p">,</span><span class="nx">removeCellCssStyles</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">D</span><span class="p">[</span><span class="nx">a</span><span class="p">]){</span><span class="nx">$a</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">D</span><span class="p">[</span><span class="nx">a</span><span class="p">]);</span><span class="k">delete</span> <span class="nx">D</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="nx">l</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">onCellCssStylesChanged</span><span class="p">,{</span><span class="nx">key</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">hash</span><span class="o">:</span><span class="kc">null</span><span class="p">})}},</span><span class="nx">getCellCssStyles</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">D</span><span class="p">[</span><span class="nx">a</span><span class="p">]},</span></div><div class='line' id='LC79'><span class="nx">init</span><span class="o">:</span><span class="nx">fb</span><span class="p">,</span><span class="nx">destroy</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">p</span><span class="p">().</span><span class="nx">cancelCurrentEdit</span><span class="p">();</span><span class="nx">l</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">onBeforeDestroy</span><span class="p">,{});</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">O</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">)</span><span class="nx">gb</span><span class="p">(</span><span class="nx">O</span><span class="p">[</span><span class="nx">a</span><span class="p">]);</span><span class="nx">d</span><span class="p">.</span><span class="nx">enableColumnReorder</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">sortable</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">sortable</span><span class="p">(</span><span class="s2">&quot;destroy&quot;</span><span class="p">);</span><span class="nx">B</span><span class="p">.</span><span class="nx">parents</span><span class="p">().</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;scroll.slickgrid&quot;</span><span class="p">);</span><span class="nx">n</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;.slickgrid&quot;</span><span class="p">);</span><span class="nx">X</span><span class="p">.</span><span class="nx">remove</span><span class="p">();</span><span class="nx">Y</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">B</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;draginit dragstart dragend drag&quot;</span><span class="p">);</span><span class="nx">n</span><span class="p">.</span><span class="nx">empty</span><span class="p">().</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">z</span><span class="p">)},</span><span class="nx">getEditorLock</span><span class="o">:</span><span class="nx">p</span><span class="p">,</span><span class="nx">getEditController</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">Ha</span><span class="p">}});</span><span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">ba</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="o">&lt;</span><span class="mi">1</span><span class="p">)</span><span class="k">throw</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;SlickGrid requires a valid container, &quot;</span><span class="o">+</span><span class="nx">ba</span><span class="o">+</span><span class="s2">&quot; does not exist in the DOM.&quot;</span><span class="p">);</span><span class="nx">A</span><span class="o">=</span><span class="nx">A</span><span class="o">||</span><span class="nx">ic</span><span class="p">();</span><span class="nx">G</span><span class="o">=</span><span class="nx">G</span><span class="o">||</span><span class="nx">Ub</span><span class="p">();</span></div><div class='line' id='LC80'><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">qc</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="nx">La</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">defaultColumnWidth</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">enableColumnReorder</span><span class="o">&amp;&amp;!</span><span class="nx">e</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">sortable</span><span class="p">)</span><span class="k">throw</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;SlickGrid&#39;s &#39;enableColumnReorder = true&#39; option requires jquery-ui.sortable module to be loaded&quot;</span><span class="p">);</span><span class="nx">Ha</span><span class="o">=</span><span class="p">{</span><span class="nx">commitCurrentEdit</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">C</span><span class="p">(</span><span class="nx">m</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">u</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">isValueChanged</span><span class="p">()){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">validate</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">valid</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="o">&lt;</span><span class="nx">q</span><span class="p">()){</span><span class="nx">c</span><span class="o">=</span><span class="p">{</span><span class="nx">row</span><span class="o">:</span><span class="nx">m</span><span class="p">,</span><span class="nx">cell</span><span class="o">:</span><span class="nx">u</span><span class="p">,</span><span class="nx">editor</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">serializedValue</span><span class="o">:</span><span class="nx">k</span><span class="p">.</span><span class="nx">serializeValue</span><span class="p">(),</span><span class="nx">prevSerializedValue</span><span class="o">:</span><span class="nx">Pb</span><span class="p">,</span><span class="nx">execute</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">editor</span><span class="p">.</span><span class="nx">applyValue</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">serializedValue</span><span class="p">);</span><span class="nx">Wa</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">row</span><span class="p">)},</span><span class="nx">undo</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">editor</span><span class="p">.</span><span class="nx">applyValue</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC81'><span class="k">this</span><span class="p">.</span><span class="nx">prevSerializedValue</span><span class="p">);</span><span class="nx">Wa</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">row</span><span class="p">)}};</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">editCommandHandler</span><span class="p">){</span><span class="nx">L</span><span class="p">();</span><span class="nx">d</span><span class="p">.</span><span class="nx">editCommandHandler</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">c</span><span class="p">.</span><span class="nx">execute</span><span class="p">();</span><span class="nx">L</span><span class="p">()}</span><span class="nx">l</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">onCellChange</span><span class="p">,{</span><span class="nx">row</span><span class="o">:</span><span class="nx">m</span><span class="p">,</span><span class="nx">cell</span><span class="o">:</span><span class="nx">u</span><span class="p">,</span><span class="nx">item</span><span class="o">:</span><span class="nx">a</span><span class="p">})}</span><span class="k">else</span><span class="p">{</span><span class="nx">c</span><span class="o">=</span><span class="p">{};</span><span class="nx">k</span><span class="p">.</span><span class="nx">applyValue</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">serializeValue</span><span class="p">());</span><span class="nx">L</span><span class="p">();</span><span class="nx">l</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">onAddNewRow</span><span class="p">,{</span><span class="nx">item</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">column</span><span class="o">:</span><span class="nx">b</span><span class="p">})}</span><span class="k">return</span><span class="o">!</span><span class="nx">p</span><span class="p">().</span><span class="nx">isActive</span><span class="p">()}</span><span class="nx">e</span><span class="p">(</span><span class="nx">o</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;invalid&quot;</span><span class="p">);</span><span class="nx">e</span><span class="p">(</span><span class="nx">o</span><span class="p">).</span><span class="nx">stop</span><span class="p">(</span><span class="kc">true</span><span class="p">,</span><span class="kc">true</span><span class="p">).</span><span class="nx">effect</span><span class="p">(</span><span class="s2">&quot;highlight&quot;</span><span class="p">,{</span><span class="nx">color</span><span class="o">:</span><span class="s2">&quot;red&quot;</span><span class="p">},</span><span class="mi">300</span><span class="p">);</span><span class="nx">l</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">onValidationError</span><span class="p">,{</span><span class="nx">editor</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">cellNode</span><span class="o">:</span><span class="nx">o</span><span class="p">,</span><span class="nx">validationResults</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">row</span><span class="o">:</span><span class="nx">m</span><span class="p">,</span><span class="nx">cell</span><span class="o">:</span><span class="nx">u</span><span class="p">,</span><span class="nx">column</span><span class="o">:</span><span class="nx">b</span><span class="p">});</span><span class="nx">k</span><span class="p">.</span><span class="nx">focus</span><span class="p">();</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="nx">L</span><span class="p">()}</span><span class="k">return</span> <span class="kc">true</span><span class="p">},</span><span class="nx">cancelCurrentEdit</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">L</span><span class="p">();</span></div><div class='line' id='LC82'><span class="k">return</span> <span class="kc">true</span><span class="p">}};</span><span class="nx">n</span><span class="p">.</span><span class="nx">empty</span><span class="p">().</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;overflow&quot;</span><span class="p">,</span><span class="s2">&quot;hidden&quot;</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;outline&quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">z</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;ui-widget&quot;</span><span class="p">);</span><span class="sr">/relative|absolute|fixed/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;position&quot;</span><span class="p">))</span><span class="o">||</span><span class="nx">n</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;position&quot;</span><span class="p">,</span><span class="s2">&quot;relative&quot;</span><span class="p">);</span><span class="nx">Ka</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="s2">&quot;&lt;div tabIndex=&#39;0&#39; hideFocus style=&#39;position:fixed;width:0;height:0;top:0;left:0;outline:0;&#39;&gt;&lt;/div&gt;&quot;</span><span class="p">).</span><span class="nx">appendTo</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span><span class="nx">ca</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="s2">&quot;&lt;div class=&#39;slick-header ui-state-default&#39; style=&#39;overflow:hidden;position:relative;&#39; /&gt;&quot;</span><span class="p">).</span><span class="nx">appendTo</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span><span class="nx">t</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="s2">&quot;&lt;div class=&#39;slick-header-columns&#39; style=&#39;width:10000px; left:-1000px&#39; /&gt;&quot;</span><span class="p">).</span><span class="nx">appendTo</span><span class="p">(</span><span class="nx">ca</span><span class="p">);</span></div><div class='line' id='LC83'><span class="nx">Q</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="s2">&quot;&lt;div class=&#39;slick-headerrow ui-state-default&#39; style=&#39;overflow:hidden;position:relative;&#39; /&gt;&quot;</span><span class="p">).</span><span class="nx">appendTo</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span><span class="nx">da</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="s2">&quot;&lt;div class=&#39;slick-headerrow-columns&#39; /&gt;&quot;</span><span class="p">).</span><span class="nx">appendTo</span><span class="p">(</span><span class="nx">Q</span><span class="p">);</span><span class="nx">aa</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="s2">&quot;&lt;div class=&#39;slick-top-panel-scroller ui-state-default&#39; style=&#39;overflow:hidden;position:relative;&#39; /&gt;&quot;</span><span class="p">).</span><span class="nx">appendTo</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span><span class="nx">Tb</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="s2">&quot;&lt;div class=&#39;slick-top-panel&#39; style=&#39;width:10000px&#39; /&gt;&quot;</span><span class="p">).</span><span class="nx">appendTo</span><span class="p">(</span><span class="nx">aa</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">showTopPanel</span><span class="o">||</span><span class="nx">aa</span><span class="p">.</span><span class="nx">hide</span><span class="p">();</span><span class="nx">d</span><span class="p">.</span><span class="nx">showHeaderRow</span><span class="o">||</span><span class="nx">Q</span><span class="p">.</span><span class="nx">hide</span><span class="p">();</span><span class="nx">v</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="s2">&quot;&lt;div class=&#39;slick-viewport&#39; style=&#39;width:100%;overflow:auto;outline:0;position:relative;;&#39;&gt;&quot;</span><span class="p">).</span><span class="nx">appendTo</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span></div><div class='line' id='LC84'><span class="nx">v</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;overflow-y&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">autoHeight</span><span class="o">?</span><span class="s2">&quot;hidden&quot;</span><span class="o">:</span><span class="s2">&quot;auto&quot;</span><span class="p">);</span><span class="nx">B</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="s2">&quot;&lt;div class=&#39;grid-canvas&#39; /&gt;&quot;</span><span class="p">).</span><span class="nx">appendTo</span><span class="p">(</span><span class="nx">v</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">explicitInitialization</span><span class="o">||</span><span class="nx">fb</span><span class="p">()}}});</span><span class="kd">var</span> <span class="nx">G</span><span class="p">,</span><span class="nx">A</span><span class="p">})(</span><span class="nx">jQuery</span><span class="p">);</span></div></pre></div>
          </td>
        </tr>
      </table>
  </div>

          </div>
        </div>

        <a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
        <div id="jump-to-line" style="display:none">
          <form accept-charset="UTF-8" class="js-jump-to-line-form">
            <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;">
            <button type="submit" class="button">Go</button>
          </form>
        </div>

      </div>
    </div>
</div>

<div id="js-frame-loading-template" class="frame frame-loading large-loading-area" style="display:none;">
  <img class="js-frame-loading-spinner" src="https://a248.e.akamai.net/assets.github.com/images/spinners/octocat-spinner-128.gif" height="64" width="64">
</div>


        </div>
      </div>
      <div class="modal-backdrop"></div>
    </div>

    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="http://developer.github.com">Developer</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>
    </ul>

    <a href="/">
      <span class="mega-octicon octicon-mark-github"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2013 <span title="0.05096s from fe13.rs.github.com">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
          <div class="suggester-container">
              <div class="suggester fullscreen-suggester js-navigation-container" id="fullscreen_suggester"
                 data-url="/domoritz/recline/suggestions/commit">
              </div>
          </div>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped leftwards" title="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped leftwards"
      title="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-remove-close close ajax-error-dismiss"></a>
      Something went wrong with that request. Please try again.
    </div>

    
    <span id='server_response_time' data-time='0.05135' data-host='fe13'></span>
    
  </body>
</html>

